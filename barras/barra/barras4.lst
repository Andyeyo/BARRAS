;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 14/11/2018 12:45:54
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF009EF41  	GOTO        4738
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x001C	0x0E00      	MOVLW       0
0x001E	0xBA9E      	BTFSC       PIR1, 5 
0x0020	0x0E01      	MOVLW       1
0x0022	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x0024	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x0026	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x002A	0xA2AB      	BTFSS       RCSTA, 1 
0x002C	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x002E	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x0030	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0032	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x0036	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0038	0xB2AC      	BTFSC       TXSTA, 1 
0x003A	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x003C	0x0000      	NOP
0x003E	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x0040	0xFFADC145  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0044	0x0012      	RETURN      0
; end of _UART1_Write
_UART1_Tx_Idle:
;__Lib_UART_c67.c,52 :: 		
;__Lib_UART_c67.c,53 :: 		
0x0046	0x0E00      	MOVLW       0
0x0048	0xB2AC      	BTFSC       TXSTA, 1 
0x004A	0x0E01      	MOVLW       1
0x004C	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,54 :: 		
L_end_UART1_Tx_Idle:
0x004E	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_SETFUN32:
;__Lib_MathDouble.c,144 :: 		
;__Lib_MathDouble.c,152 :: 		
0x0050	0x840B      	BSF         R11, 2, 0
;__Lib_MathDouble.c,153 :: 		
0x0052	0xAE0B      	BTFSS       R11, 7, 0
;__Lib_MathDouble.c,154 :: 		
0x0054	0xF000EF33  	GOTO        SETFUN32EEE
;__Lib_MathDouble.c,156 :: 		
0x0058	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,157 :: 		
0x005A	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,158 :: 		
0x005C	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,159 :: 		
0x005E	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,160 :: 		
0x0060	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,161 :: 		
0x0062	0x360A      	RLCF        R10, 1, 0
;__Lib_MathDouble.c,162 :: 		
0x0064	0x3202      	RRCF        R2, 1, 0
;__Lib_MathDouble.c,163 :: 		
SETFUN32EEE:
;__Lib_MathDouble.c,164 :: 		
0x0066	0x0EFF      	MOVLW       255
;__Lib_MathDouble.c,166 :: 		
L_end_SETFUN32:
0x0068	0x0012      	RETURN      0
; end of _SETFUN32
_RES032:
;__Lib_MathDouble.c,128 :: 		
;__Lib_MathDouble.c,134 :: 		
0x006A	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,135 :: 		
0x006C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,136 :: 		
0x006E	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,137 :: 		
0x0070	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,138 :: 		
0x0072	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,139 :: 		
0x0074	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,141 :: 		
L_end_RES032:
0x0076	0x0012      	RETURN      0
; end of _RES032
_EEPROM_Read:
;__Lib_EEPROM_1024.c,8 :: 		
;__Lib_EEPROM_1024.c,10 :: 		
0x0078	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_1024.c,11 :: 		
0x007A	0xFFAAC143  	MOVFF       FARG_EEPROM_Read_address+1, EEADRH
;__Lib_EEPROM_1024.c,12 :: 		
0x007E	0xFFA9C142  	MOVFF       FARG_EEPROM_Read_address, EEADR
;__Lib_EEPROM_1024.c,13 :: 		
0x0082	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_1024.c,14 :: 		
0x0084	0x80A6      	BSF         EECON1, 0 
;__Lib_EEPROM_1024.c,16 :: 		
0x0086	0xF000CFA8  	MOVFF       EEDATA, R0
;__Lib_EEPROM_1024.c,18 :: 		
L_end_EEPROM_Read:
0x008A	0x0012      	RETURN      0
; end of _EEPROM_Read
_FIXSIGN32:
;__Lib_MathDouble.c,117 :: 		
;__Lib_MathDouble.c,121 :: 		
0x008C	0xAE0A      	BTFSS       R10, 7, 0
;__Lib_MathDouble.c,122 :: 		
0x008E	0x9E02      	BCF         R2, 7, 0
;__Lib_MathDouble.c,123 :: 		
0x0090	0x0E00      	MOVLW       0
;__Lib_MathDouble.c,125 :: 		
L_end_FIXSIGN32:
0x0092	0x0012      	RETURN      0
; end of _FIXSIGN32
_____DoIFC:
;__Lib_System.c,93 :: 		
;__Lib_System.c,94 :: 		
0x0094	0x50F2      	MOVF        INTCON, 0, 0
;__Lib_System.c,95 :: 		
0x0096	0x6E02      	MOVWF       R2, 0
;__Lib_System.c,96 :: 		
0x0098	0x9EF2      	BCF         INTCON, 7 
;__Lib_System.c,97 :: 		
0x009A	0x0005      	PUSH
;__Lib_System.c,98 :: 		
0x009C	0x6AFF      	CLRF        TOSU, 0
;__Lib_System.c,99 :: 		
0x009E	0x5001      	MOVF        R1, 0, 0
;__Lib_System.c,100 :: 		
0x00A0	0x6EFE      	MOVWF       TOSH, 0
;__Lib_System.c,101 :: 		
0x00A2	0x5000      	MOVF        R0, 0, 0
;__Lib_System.c,102 :: 		
0x00A4	0x6EFD      	MOVWF       TOSL, 0
;__Lib_System.c,103 :: 		
0x00A6	0xBE02      	BTFSC       R2, 7, 0
;__Lib_System.c,104 :: 		
0x00A8	0x8EF2      	BSF         INTCON, 7, 0
;__Lib_System.c,105 :: 		
;__Lib_System.c,107 :: 		
L_end_____DoIFC:
0x00AA	0x0012      	RETURN      0
; end of _____DoIFC
_EEPROM_Write:
;__Lib_EEPROM_1024.c,23 :: 		
;__Lib_EEPROM_1024.c,26 :: 		
L_EEPROM_Write0:
0x00AC	0xA2A6      	BTFSS       EECON1, 1 
0x00AE	0xD002      	BRA         L_EEPROM_Write1
;__Lib_EEPROM_1024.c,27 :: 		
0x00B0	0x0000      	NOP
0x00B2	0xD7FC      	BRA         L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM_1024.c,28 :: 		
0x00B4	0x9CA6      	BCF         EECON1, 6 
;__Lib_EEPROM_1024.c,29 :: 		
0x00B6	0xFFAAC143  	MOVFF       FARG_EEPROM_Write_address+1, EEADRH
;__Lib_EEPROM_1024.c,30 :: 		
0x00BA	0xFFA9C142  	MOVFF       FARG_EEPROM_Write_address, EEADR
;__Lib_EEPROM_1024.c,31 :: 		
0x00BE	0xFFA8C144  	MOVFF       FARG_EEPROM_Write_data_, EEDATA
;__Lib_EEPROM_1024.c,32 :: 		
0x00C2	0x9EA6      	BCF         EECON1, 7 
;__Lib_EEPROM_1024.c,33 :: 		
0x00C4	0x84A6      	BSF         EECON1, 2 
;__Lib_EEPROM_1024.c,35 :: 		
0x00C6	0xF000CFF2  	MOVFF       INTCON, R0
;__Lib_EEPROM_1024.c,38 :: 		
0x00CA	0x9EF2      	BCF         INTCON, 7 
;__Lib_EEPROM_1024.c,39 :: 		
0x00CC	0x0E55      	MOVLW       85
0x00CE	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_1024.c,40 :: 		
0x00D0	0x0EAA      	MOVLW       170
0x00D2	0x6EA7      	MOVWF       EECON2 
;__Lib_EEPROM_1024.c,41 :: 		
0x00D4	0x82A6      	BSF         EECON1, 1 
;__Lib_EEPROM_1024.c,44 :: 		
0x00D6	0xBE00      	BTFSC       R0, 7 
0x00D8	0xD002      	BRA         L__EEPROM_Write4
0x00DA	0x9EF2      	BCF         INTCON, 7 
0x00DC	0xD001      	BRA         L__EEPROM_Write5
L__EEPROM_Write4:
0x00DE	0x8EF2      	BSF         INTCON, 7 
L__EEPROM_Write5:
;__Lib_EEPROM_1024.c,46 :: 		
0x00E0	0x94A6      	BCF         EECON1, 2 
;__Lib_EEPROM_1024.c,48 :: 		
L_end_EEPROM_Write:
0x00E2	0x0012      	RETURN      0
; end of _EEPROM_Write
_read_long:
;eeprom.c,36 :: 		unsigned long int read_long(unsigned int addr)
;eeprom.c,38 :: 		unsigned long int res=0;
0x00E4	0x0101      	MOVLB       1
0x00E6	0x6B3B      	CLRF        read_long_res_L0, 1
0x00E8	0x6B3C      	CLRF        read_long_res_L0+1, 1
0x00EA	0x6B3D      	CLRF        read_long_res_L0+2, 1
0x00EC	0x6B3E      	CLRF        read_long_res_L0+3, 1
;eeprom.c,39 :: 		res+=(((unsigned long int)EEPROM_Read(addr++))<<24);
0x00EE	0xF142C139  	MOVFF       FARG_read_long_addr, FARG_EEPROM_Read_address
0x00F2	0xF143C13A  	MOVFF       FARG_read_long_addr+1, FARG_EEPROM_Read_address+1
0x00F6	0xDFC0      	RCALL       _EEPROM_Read
0x00F8	0xF005C000  	MOVFF       R0, R5
0x00FC	0x0E00      	MOVLW       0
0x00FE	0x6E06      	MOVWF       R6 
0x0100	0x6E07      	MOVWF       R7 
0x0102	0x6E08      	MOVWF       R8 
0x0104	0xF003C005  	MOVFF       R5, R3
0x0108	0x6A00      	CLRF        R0 
0x010A	0x6A01      	CLRF        R1 
0x010C	0x6A02      	CLRF        R2 
0x010E	0x5000      	MOVF        R0, 0 
0x0110	0x273B      	ADDWF       read_long_res_L0, 1, 1
0x0112	0x5001      	MOVF        R1, 0 
0x0114	0x233C      	ADDWFC      read_long_res_L0+1, 1, 1
0x0116	0x5002      	MOVF        R2, 0 
0x0118	0x233D      	ADDWFC      read_long_res_L0+2, 1, 1
0x011A	0x5003      	MOVF        R3, 0 
0x011C	0x233E      	ADDWFC      read_long_res_L0+3, 1, 1
0x011E	0x4B39      	INFSNZ      FARG_read_long_addr, 1, 1
0x0120	0x2B3A      	INCF        FARG_read_long_addr+1, 1, 1
;eeprom.c,40 :: 		res+=(((unsigned long int)EEPROM_Read(addr++))<<16);
0x0122	0xF142C139  	MOVFF       FARG_read_long_addr, FARG_EEPROM_Read_address
0x0126	0xF143C13A  	MOVFF       FARG_read_long_addr+1, FARG_EEPROM_Read_address+1
0x012A	0xDFA6      	RCALL       _EEPROM_Read
0x012C	0xF005C000  	MOVFF       R0, R5
0x0130	0x0E00      	MOVLW       0
0x0132	0x6E06      	MOVWF       R6 
0x0134	0x6E07      	MOVWF       R7 
0x0136	0x6E08      	MOVWF       R8 
0x0138	0xF003C006  	MOVFF       R6, R3
0x013C	0xF002C005  	MOVFF       R5, R2
0x0140	0x6A00      	CLRF        R0 
0x0142	0x6A01      	CLRF        R1 
0x0144	0x5000      	MOVF        R0, 0 
0x0146	0x273B      	ADDWF       read_long_res_L0, 1, 1
0x0148	0x5001      	MOVF        R1, 0 
0x014A	0x233C      	ADDWFC      read_long_res_L0+1, 1, 1
0x014C	0x5002      	MOVF        R2, 0 
0x014E	0x233D      	ADDWFC      read_long_res_L0+2, 1, 1
0x0150	0x5003      	MOVF        R3, 0 
0x0152	0x233E      	ADDWFC      read_long_res_L0+3, 1, 1
0x0154	0x4B39      	INFSNZ      FARG_read_long_addr, 1, 1
0x0156	0x2B3A      	INCF        FARG_read_long_addr+1, 1, 1
;eeprom.c,41 :: 		res+=(((unsigned long int)EEPROM_Read(addr++))<<8);
0x0158	0xF142C139  	MOVFF       FARG_read_long_addr, FARG_EEPROM_Read_address
0x015C	0xF143C13A  	MOVFF       FARG_read_long_addr+1, FARG_EEPROM_Read_address+1
0x0160	0xDF8B      	RCALL       _EEPROM_Read
0x0162	0xF005C000  	MOVFF       R0, R5
0x0166	0x0E00      	MOVLW       0
0x0168	0x6E06      	MOVWF       R6 
0x016A	0x6E07      	MOVWF       R7 
0x016C	0x6E08      	MOVWF       R8 
0x016E	0xF003C007  	MOVFF       R7, R3
0x0172	0xF002C006  	MOVFF       R6, R2
0x0176	0xF001C005  	MOVFF       R5, R1
0x017A	0x6A00      	CLRF        R0 
0x017C	0x5000      	MOVF        R0, 0 
0x017E	0x273B      	ADDWF       read_long_res_L0, 1, 1
0x0180	0x5001      	MOVF        R1, 0 
0x0182	0x233C      	ADDWFC      read_long_res_L0+1, 1, 1
0x0184	0x5002      	MOVF        R2, 0 
0x0186	0x233D      	ADDWFC      read_long_res_L0+2, 1, 1
0x0188	0x5003      	MOVF        R3, 0 
0x018A	0x233E      	ADDWFC      read_long_res_L0+3, 1, 1
0x018C	0x4B39      	INFSNZ      FARG_read_long_addr, 1, 1
0x018E	0x2B3A      	INCF        FARG_read_long_addr+1, 1, 1
;eeprom.c,42 :: 		res+=(unsigned long int)EEPROM_Read(addr);
0x0190	0xF142C139  	MOVFF       FARG_read_long_addr, FARG_EEPROM_Read_address
0x0194	0xF143C13A  	MOVFF       FARG_read_long_addr+1, FARG_EEPROM_Read_address+1
0x0198	0xDF6F      	RCALL       _EEPROM_Read
0x019A	0x0E00      	MOVLW       0
0x019C	0x6E01      	MOVWF       R1 
0x019E	0x6E02      	MOVWF       R2 
0x01A0	0x6E03      	MOVWF       R3 
0x01A2	0x513B      	MOVF        read_long_res_L0, 0, 1
0x01A4	0x2600      	ADDWF       R0, 1 
0x01A6	0x513C      	MOVF        read_long_res_L0+1, 0, 1
0x01A8	0x2201      	ADDWFC      R1, 1 
0x01AA	0x513D      	MOVF        read_long_res_L0+2, 0, 1
0x01AC	0x2202      	ADDWFC      R2, 1 
0x01AE	0x513E      	MOVF        read_long_res_L0+3, 0, 1
0x01B0	0x2203      	ADDWFC      R3, 1 
0x01B2	0xF13BC000  	MOVFF       R0, read_long_res_L0
0x01B6	0xF13CC001  	MOVFF       R1, read_long_res_L0+1
0x01BA	0xF13DC002  	MOVFF       R2, read_long_res_L0+2
0x01BE	0xF13EC003  	MOVFF       R3, read_long_res_L0+3
;eeprom.c,43 :: 		return res;
;eeprom.c,44 :: 		}
L_end_read_long:
0x01C2	0x0012      	RETURN      0
; end of _read_long
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x01C4	0x0012      	RETURN      0
; end of _Delay_1us
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x01C6	0x0E38      	MOVLW       _UART1_Write
0x01C8	0x0100      	MOVLB       0
0x01CA	0x6FA0      	MOVWF       _UART_Wr_Ptr, 1
0x01CC	0x0E00      	MOVLW       hi_addr(_UART1_Write)
0x01CE	0x6FA1      	MOVWF       _UART_Wr_Ptr+1, 1
0x01D0	0x0E45      	MOVLW       FARG_UART1_Write_data_
0x01D2	0x6FA2      	MOVWF       _UART_Wr_Ptr+2, 1
0x01D4	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x01D6	0x6FA3      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x01D8	0x0E26      	MOVLW       _UART1_Read
0x01DA	0x6FA4      	MOVWF       _UART_Rd_Ptr, 1
0x01DC	0x0E00      	MOVLW       hi_addr(_UART1_Read)
0x01DE	0x6FA5      	MOVWF       _UART_Rd_Ptr+1, 1
0x01E0	0x0E00      	MOVLW       0
0x01E2	0x6FA6      	MOVWF       _UART_Rd_Ptr+2, 1
0x01E4	0x0E00      	MOVLW       0
0x01E6	0x6FA7      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x01E8	0x0E1C      	MOVLW       _UART1_Data_Ready
0x01EA	0x6FA8      	MOVWF       _UART_Rdy_Ptr, 1
0x01EC	0x0E00      	MOVLW       hi_addr(_UART1_Data_Ready)
0x01EE	0x6FA9      	MOVWF       _UART_Rdy_Ptr+1, 1
0x01F0	0x0E00      	MOVLW       0
0x01F2	0x6FAA      	MOVWF       _UART_Rdy_Ptr+2, 1
0x01F4	0x0E00      	MOVLW       0
0x01F6	0x6FAB      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x01F8	0x0E46      	MOVLW       _UART1_Tx_Idle
0x01FA	0x6FAC      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x01FC	0x0E00      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x01FE	0x6FAD      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x0200	0x0E00      	MOVLW       0
0x0202	0x6FAE      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0204	0x0E00      	MOVLW       0
0x0206	0x6FAF      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0208	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x020A	0x0E90      	MOVLW       144
0x020C	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x020E	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x0210	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0212	0xAA9E      	BTFSS       PIR1, 5 
0x0214	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0216	0xF000CFAE  	MOVFF       RCREG, R0
0x021A	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x021C	0x0012      	RETURN      0
; end of _UART1_Init
_write_long:
;eeprom.c,18 :: 		void write_long(unsigned int addr, unsigned long int four_byte)
;eeprom.c,25 :: 		f_byte=four_byte&0xFF;
0x021E	0x0EFF      	MOVLW       255
0x0220	0x0101      	MOVLB       1
0x0222	0x153B      	ANDWF       FARG_write_long_four_byte, 0, 1
0x0224	0x6F3F      	MOVWF       write_long_f_byte_L0, 1
;eeprom.c,26 :: 		s_byte=(four_byte&0xFF00)>>8;
0x0226	0x0E00      	MOVLW       0
0x0228	0x153B      	ANDWF       FARG_write_long_four_byte, 0, 1
0x022A	0x6E05      	MOVWF       R5 
0x022C	0x0EFF      	MOVLW       255
0x022E	0x153C      	ANDWF       FARG_write_long_four_byte+1, 0, 1
0x0230	0x6E06      	MOVWF       R6 
0x0232	0xF007C13D  	MOVFF       FARG_write_long_four_byte+2, R7
0x0236	0xF008C13E  	MOVFF       FARG_write_long_four_byte+3, R8
0x023A	0x0E00      	MOVLW       0
0x023C	0x1607      	ANDWF       R7, 1 
0x023E	0x1608      	ANDWF       R8, 1 
0x0240	0xF000C006  	MOVFF       R6, R0
0x0244	0xF001C007  	MOVFF       R7, R1
0x0248	0xF002C008  	MOVFF       R8, R2
0x024C	0x6A03      	CLRF        R3 
0x024E	0xF140C000  	MOVFF       R0, write_long_s_byte_L0
;eeprom.c,27 :: 		t_byte=(four_byte&0xFF0000)>>16;
0x0252	0x0E00      	MOVLW       0
0x0254	0x153B      	ANDWF       FARG_write_long_four_byte, 0, 1
0x0256	0x6E05      	MOVWF       R5 
0x0258	0x0E00      	MOVLW       0
0x025A	0x153C      	ANDWF       FARG_write_long_four_byte+1, 0, 1
0x025C	0x6E06      	MOVWF       R6 
0x025E	0x0EFF      	MOVLW       255
0x0260	0x153D      	ANDWF       FARG_write_long_four_byte+2, 0, 1
0x0262	0x6E07      	MOVWF       R7 
0x0264	0x0E00      	MOVLW       0
0x0266	0x153E      	ANDWF       FARG_write_long_four_byte+3, 0, 1
0x0268	0x6E08      	MOVWF       R8 
0x026A	0xF000C007  	MOVFF       R7, R0
0x026E	0xF001C008  	MOVFF       R8, R1
0x0272	0x6A02      	CLRF        R2 
0x0274	0x6A03      	CLRF        R3 
0x0276	0xF141C000  	MOVFF       R0, write_long_t_byte_L0
;eeprom.c,28 :: 		fth_byte=(four_byte&0xFF000000)>>24;
0x027A	0x0E00      	MOVLW       0
0x027C	0x153B      	ANDWF       FARG_write_long_four_byte, 0, 1
0x027E	0x6E05      	MOVWF       R5 
0x0280	0x0E00      	MOVLW       0
0x0282	0x153C      	ANDWF       FARG_write_long_four_byte+1, 0, 1
0x0284	0x6E06      	MOVWF       R6 
0x0286	0x0E00      	MOVLW       0
0x0288	0x153D      	ANDWF       FARG_write_long_four_byte+2, 0, 1
0x028A	0x6E07      	MOVWF       R7 
0x028C	0x0EFF      	MOVLW       255
0x028E	0x153E      	ANDWF       FARG_write_long_four_byte+3, 0, 1
0x0290	0x6E08      	MOVWF       R8 
0x0292	0xF000C008  	MOVFF       R8, R0
0x0296	0x6A01      	CLRF        R1 
0x0298	0x6A02      	CLRF        R2 
0x029A	0x6A03      	CLRF        R3 
;eeprom.c,30 :: 		EEPROM_Write (addr++,fth_byte);
0x029C	0xF142C139  	MOVFF       FARG_write_long_addr, FARG_EEPROM_Write_address
0x02A0	0xF143C13A  	MOVFF       FARG_write_long_addr+1, FARG_EEPROM_Write_address+1
0x02A4	0xF144C000  	MOVFF       R0, FARG_EEPROM_Write_data_
0x02A8	0xDF01      	RCALL       _EEPROM_Write
0x02AA	0x0101      	MOVLB       1
0x02AC	0x4B39      	INFSNZ      FARG_write_long_addr, 1, 1
0x02AE	0x2B3A      	INCF        FARG_write_long_addr+1, 1, 1
;eeprom.c,31 :: 		EEPROM_Write (addr++,t_byte);
0x02B0	0xF142C139  	MOVFF       FARG_write_long_addr, FARG_EEPROM_Write_address
0x02B4	0xF143C13A  	MOVFF       FARG_write_long_addr+1, FARG_EEPROM_Write_address+1
0x02B8	0xF144C141  	MOVFF       write_long_t_byte_L0, FARG_EEPROM_Write_data_
0x02BC	0xDEF7      	RCALL       _EEPROM_Write
0x02BE	0x0101      	MOVLB       1
0x02C0	0x4B39      	INFSNZ      FARG_write_long_addr, 1, 1
0x02C2	0x2B3A      	INCF        FARG_write_long_addr+1, 1, 1
;eeprom.c,32 :: 		EEPROM_Write (addr++,s_byte);
0x02C4	0xF142C139  	MOVFF       FARG_write_long_addr, FARG_EEPROM_Write_address
0x02C8	0xF143C13A  	MOVFF       FARG_write_long_addr+1, FARG_EEPROM_Write_address+1
0x02CC	0xF144C140  	MOVFF       write_long_s_byte_L0, FARG_EEPROM_Write_data_
0x02D0	0xDEED      	RCALL       _EEPROM_Write
0x02D2	0x0101      	MOVLB       1
0x02D4	0x4B39      	INFSNZ      FARG_write_long_addr, 1, 1
0x02D6	0x2B3A      	INCF        FARG_write_long_addr+1, 1, 1
;eeprom.c,33 :: 		EEPROM_Write (addr,f_byte);
0x02D8	0xF142C139  	MOVFF       FARG_write_long_addr, FARG_EEPROM_Write_address
0x02DC	0xF143C13A  	MOVFF       FARG_write_long_addr+1, FARG_EEPROM_Write_address+1
0x02E0	0xF144C13F  	MOVFF       write_long_f_byte_L0, FARG_EEPROM_Write_data_
0x02E4	0xDEE3      	RCALL       _EEPROM_Write
;eeprom.c,34 :: 		}
L_end_write_long:
0x02E6	0x0012      	RETURN      0
; end of _write_long
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x02E8	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x02EA	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x02EC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x02EE	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x02F0	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x02F2	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x02F6	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x02FA	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x02FC	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x02FE	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0302	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x0306	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x0308	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x030A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x030C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x030E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0310	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0312	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0314	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x0316	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x0318	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x031A	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x031C	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x031E	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0320	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0322	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0324	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x0326	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x032A	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x032E	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0332	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x0336	0x0012      	RETURN      0
; end of _Mul_16X16_U
_RS485Slave_Init:
;__Lib_RS485.c,40 :: 		
;__Lib_RS485.c,41 :: 		
0x0338	0x9492      	BCF         rs485_rxtx_pin_direction, BitPos(rs485_rxtx_pin_direction+0) 
;__Lib_RS485.c,42 :: 		
0x033A	0x9480      	BCF         rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0) 
;__Lib_RS485.c,44 :: 		
0x033C	0x0E01      	MOVLW       1
0x033E	0x0100      	MOVLB       0
0x0340	0x6FB0      	MOVWF       __Lib_RS485_sl_state, 1
;__Lib_RS485.c,45 :: 		
0x0342	0x6A34      	CLRF        __Lib_RS485_specadr 
;__Lib_RS485.c,46 :: 		
0x0344	0xF033C139  	MOVFF       FARG_RS485Slave_Init_slave_address, __Lib_RS485__sladdress
;__Lib_RS485.c,47 :: 		
0x0348	0x0101      	MOVLB       1
0x034A	0x5139      	MOVF        FARG_RS485Slave_Init_slave_address, 0, 1
0x034C	0x0A96      	XORLW       150
0x034E	0xE004      	BZ          L__RS485Slave_Init104
0x0350	0x5139      	MOVF        FARG_RS485Slave_Init_slave_address, 0, 1
0x0352	0x0AA9      	XORLW       169
0x0354	0xE001      	BZ          L__RS485Slave_Init104
0x0356	0xD005      	BRA         L_RS485Slave_Init2
L__RS485Slave_Init104:
;__Lib_RS485.c,48 :: 		
0x0358	0x0E01      	MOVLW       1
0x035A	0x1939      	XORWF       FARG_RS485Slave_Init_slave_address, 0, 1
0x035C	0x6E33      	MOVWF       __Lib_RS485__sladdress 
;__Lib_RS485.c,49 :: 		
0x035E	0x0EFF      	MOVLW       255
0x0360	0x6E34      	MOVWF       __Lib_RS485_specadr 
;__Lib_RS485.c,50 :: 		
L_RS485Slave_Init2:
;__Lib_RS485.c,51 :: 		
L_end_RS485Slave_Init:
0x0362	0x0012      	RETURN      0
; end of _RS485Slave_Init
_tx_prepare:
;rs485.c,81 :: 		void tx_prepare(char p0, char p1, char p2){
;rs485.c,82 :: 		slave_tx_dat[0]=p0; //msg 0
0x0364	0xF099C139  	MOVFF       FARG_tx_prepare_p0, _slave_tx_dat
;rs485.c,83 :: 		slave_tx_dat[1]=p1; //msg 1
0x0368	0xF09AC13A  	MOVFF       FARG_tx_prepare_p1, _slave_tx_dat+1
;rs485.c,84 :: 		slave_tx_dat[2]=p2; //msg 2
0x036C	0xF09BC13B  	MOVFF       FARG_tx_prepare_p2, _slave_tx_dat+2
;rs485.c,85 :: 		slave_tx_dat[3]=0; //datalen
0x0370	0x0100      	MOVLB       0
0x0372	0x6B9C      	CLRF        _slave_tx_dat+3, 1
;rs485.c,86 :: 		slave_tx_dat[4]=0; //255 when message is received
0x0374	0x6B9D      	CLRF        _slave_tx_dat+4, 1
;rs485.c,87 :: 		slave_tx_dat[5]=0; //255 if error has occurred
0x0376	0x6B9E      	CLRF        _slave_tx_dat+5, 1
;rs485.c,88 :: 		slave_tx_dat[6]=0; //address of the Slave which sent the message
0x0378	0x6B9F      	CLRF        _slave_tx_dat+6, 1
;rs485.c,89 :: 		}
L_end_tx_prepare:
0x037A	0x0012      	RETURN      0
; end of _tx_prepare
_NRM3232:
;__Lib_MathDouble.c,455 :: 		
;__Lib_MathDouble.c,463 :: 		
0x037C	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,464 :: 		
0x037E	0x6A0E      	CLRF        R14, 0
;__Lib_MathDouble.c,465 :: 		
0x0380	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,466 :: 		
0x0382	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,467 :: 		
0x0384	0xF001EFD7  	GOTO        NORM3232
;__Lib_MathDouble.c,468 :: 		
0x0388	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,469 :: 		
0x038C	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,470 :: 		
0x0390	0x6A00      	CLRF        R0, 0
;__Lib_MathDouble.c,471 :: 		
0x0392	0x860E      	BSF         R14, 3, 0
;__Lib_MathDouble.c,473 :: 		
0x0394	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,474 :: 		
0x0396	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,475 :: 		
0x0398	0xF001EFD7  	GOTO        NORM3232
;__Lib_MathDouble.c,476 :: 		
0x039C	0xF002C001  	MOVFF       R1, R2
;__Lib_MathDouble.c,477 :: 		
0x03A0	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,478 :: 		
0x03A2	0x960E      	BCF         R14, 3, 0
;__Lib_MathDouble.c,479 :: 		
0x03A4	0x880E      	BSF         R14, 4, 0
;__Lib_MathDouble.c,481 :: 		
0x03A6	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,482 :: 		
0x03A8	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,483 :: 		
0x03AA	0xF001EFE9  	GOTO        JPNRES032
;__Lib_MathDouble.c,484 :: 		
NORM3232:
;__Lib_MathDouble.c,485 :: 		
0x03AE	0x500E      	MOVF        R14, 0, 0
;__Lib_MathDouble.c,486 :: 		
0x03B0	0x5E03      	SUBWF       R3, 1, 0
;__Lib_MathDouble.c,487 :: 		
0x03B2	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,488 :: 		
0x03B4	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_MathDouble.c,489 :: 		
0x03B6	0xF001EFEE  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,490 :: 		
0x03BA	0x90D8      	BCF         STATUS, 0, 0
;__Lib_MathDouble.c,491 :: 		
NORM3232A:
;__Lib_MathDouble.c,492 :: 		
0x03BC	0xBE02      	BTFSC       R2, 7, 0
;__Lib_MathDouble.c,493 :: 		
0x03BE	0xF001EFF3  	GOTO        JMPNFIXSIGN32
;__Lib_MathDouble.c,494 :: 		
0x03C2	0x3600      	RLCF        R0, 1, 0
;__Lib_MathDouble.c,495 :: 		
0x03C4	0x3601      	RLCF        R1, 1, 0
;__Lib_MathDouble.c,496 :: 		
0x03C6	0x3602      	RLCF        R2, 1, 0
;__Lib_MathDouble.c,497 :: 		
0x03C8	0x2E03      	DECFSZ      R3, 1, 0
;__Lib_MathDouble.c,498 :: 		
0x03CA	0xF001EFDE  	GOTO        NORM3232A
;__Lib_MathDouble.c,499 :: 		
0x03CE	0xF001EFEE  	GOTO        JPNSETFUN32
;__Lib_MathDouble.c,500 :: 		
JPNRES032:
;__Lib_MathDouble.c,501 :: 		
0x03D2	0x0E01      	MOVLW       1
;__Lib_MathDouble.c,502 :: 		
0x03D4	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,504 :: 		
0x03D6	0xDE49      	RCALL       _RES032
;__Lib_MathDouble.c,506 :: 		
0x03D8	0xF001EFF6  	GOTO        NORM32EEE
;__Lib_MathDouble.c,507 :: 		
JPNSETFUN32:
;__Lib_MathDouble.c,508 :: 		
0x03DC	0x0E02      	MOVLW       2
;__Lib_MathDouble.c,509 :: 		
0x03DE	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,511 :: 		
0x03E0	0xDE37      	RCALL       _SETFUN32
;__Lib_MathDouble.c,513 :: 		
0x03E2	0xF001EFF6  	GOTO        NORM32EEE
;__Lib_MathDouble.c,514 :: 		
JMPNFIXSIGN32:
;__Lib_MathDouble.c,515 :: 		
0x03E6	0x0E04      	MOVLW       4
;__Lib_MathDouble.c,516 :: 		
0x03E8	0x6E0C      	MOVWF       R12, 0
;__Lib_MathDouble.c,518 :: 		
0x03EA	0xDE50      	RCALL       _FIXSIGN32
;__Lib_MathDouble.c,520 :: 		
NORM32EEE:
;__Lib_MathDouble.c,527 :: 		
L_end_NRM3232:
0x03EC	0x0012      	RETURN      0
; end of _NRM3232
_RS485Slave_Send:
;__Lib_RS485.c,190 :: 		
;__Lib_RS485.c,195 :: 		
0x03EE	0xF13FC033  	MOVFF       __Lib_RS485__sladdress, RS485Slave_Send_slave_address_L0
;__Lib_RS485.c,196 :: 		
0x03F2	0x5234      	MOVF        __Lib_RS485_specadr, 1 
0x03F4	0xE004      	BZ          L_RS485Slave_Send38
;__Lib_RS485.c,197 :: 		
0x03F6	0x0E01      	MOVLW       1
0x03F8	0x1833      	XORWF       __Lib_RS485__sladdress, 0 
0x03FA	0x0101      	MOVLB       1
0x03FC	0x6F3F      	MOVWF       RS485Slave_Send_slave_address_L0, 1
L_RS485Slave_Send38:
0x03FE	0x0101      	MOVLB       1
;__Lib_RS485.c,199 :: 		
0x0400	0x8480      	BSF         rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0) 
;__Lib_RS485.c,200 :: 		
0x0402	0x053B      	DECF        FARG_RS485Slave_Send_datalen, 0, 1
0x0404	0x6F3E      	MOVWF       RS485Slave_Send_len_L0, 1
;__Lib_RS485.c,201 :: 		
0x0406	0xFFE1C0A2  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x040A	0xFFE2C0A3  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x040E	0x0E96      	MOVLW       150
0x0410	0x6EE6      	MOVWF       POSTINC1 
0x0412	0xF000C0A0  	MOVFF       _UART_Wr_Ptr, R0
0x0416	0xF001C0A1  	MOVFF       _UART_Wr_Ptr+1, R1
0x041A	0xDE3C      	RCALL       _____DoIFC
;__Lib_RS485.c,202 :: 		
0x041C	0x0101      	MOVLB       1
0x041E	0x513F      	MOVF        RS485Slave_Send_slave_address_L0, 0, 1
0x0420	0x0A96      	XORLW       150
0x0422	0xE004      	BZ          L__RS485Slave_Send109
0x0424	0x513F      	MOVF        RS485Slave_Send_slave_address_L0, 0, 1
0x0426	0x0AA9      	XORLW       169
0x0428	0xE001      	BZ          L__RS485Slave_Send109
0x042A	0xD002      	BRA         L_RS485Slave_Send41
L__RS485Slave_Send109:
;__Lib_RS485.c,203 :: 		
0x042C	0x713F      	BTG         RS485Slave_Send_slave_address_L0, 0, 1
;__Lib_RS485.c,204 :: 		
0x042E	0x8D3B      	BSF         FARG_RS485Slave_Send_datalen, 6, 1
;__Lib_RS485.c,205 :: 		
L_RS485Slave_Send41:
;__Lib_RS485.c,206 :: 		
0x0430	0xFFE1C0A2  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0434	0xFFE2C0A3  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0438	0xFFE6C13F  	MOVFF       RS485Slave_Send_slave_address_L0, POSTINC1
0x043C	0xF000C0A0  	MOVFF       _UART_Wr_Ptr, R0
0x0440	0xF001C0A1  	MOVFF       _UART_Wr_Ptr+1, R1
0x0444	0xDE27      	RCALL       _____DoIFC
;__Lib_RS485.c,207 :: 		
0x0446	0x0101      	MOVLB       1
0x0448	0x6B3C      	CLRF        RS485Slave_Send_i_L0, 1
L_RS485Slave_Send42:
0x044A	0x513C      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x044C	0x5D3E      	SUBWF       RS485Slave_Send_len_L0, 0, 1
0x044E	0xE332      	BNC         L_RS485Slave_Send43
;__Lib_RS485.c,208 :: 		
0x0450	0x513C      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0452	0x2539      	ADDWF       FARG_RS485Slave_Send_data_buffer, 0, 1
0x0454	0x6EE9      	MOVWF       FSR0L 
0x0456	0x0E00      	MOVLW       0
0x0458	0x213A      	ADDWFC      FARG_RS485Slave_Send_data_buffer+1, 0, 1
0x045A	0x6EEA      	MOVWF       FSR0H 
0x045C	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0460	0xF140C001  	MOVFF       R1, RS485Slave_Send_temp_L0
;__Lib_RS485.c,209 :: 		
0x0464	0x5001      	MOVF        R1, 0 
0x0466	0x0A96      	XORLW       150
0x0468	0xE004      	BZ          L__RS485Slave_Send108
0x046A	0x5140      	MOVF        RS485Slave_Send_temp_L0, 0, 1
0x046C	0x0AA9      	XORLW       169
0x046E	0xE001      	BZ          L__RS485Slave_Send108
0x0470	0xD01F      	BRA         L_RS485Slave_Send47
L__RS485Slave_Send108:
;__Lib_RS485.c,210 :: 		
0x0472	0x513C      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x0474	0x2539      	ADDWF       FARG_RS485Slave_Send_data_buffer, 0, 1
0x0476	0x6E01      	MOVWF       R1 
0x0478	0x0E00      	MOVLW       0
0x047A	0x213A      	ADDWFC      FARG_RS485Slave_Send_data_buffer+1, 0, 1
0x047C	0x6E02      	MOVWF       R2 
0x047E	0xFFE9C001  	MOVFF       R1, FSR0L
0x0482	0xFFEAC002  	MOVFF       R2, FSR0H
0x0486	0x0E01      	MOVLW       1
0x0488	0x18EE      	XORWF       POSTINC0, 0 
0x048A	0x6E00      	MOVWF       R0 
0x048C	0xFFE1C001  	MOVFF       R1, FSR1L
0x0490	0xFFE2C002  	MOVFF       R2, FSR1H
0x0494	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_RS485.c,211 :: 		
0x0498	0xF001C13C  	MOVFF       RS485Slave_Send_i_L0, R1
0x049C	0x0E04      	MOVLW       4
0x049E	0x6E00      	MOVWF       R0 
0x04A0	0x5001      	MOVF        R1, 0 
L__RS485Slave_Send120:
0x04A2	0xE004      	BZ          L__RS485Slave_Send121
0x04A4	0x3600      	RLCF        R0, 1 
0x04A6	0x9000      	BCF         R0, 0 
0x04A8	0x0FFF      	ADDLW       255
0x04AA	0xD7FB      	BRA         L__RS485Slave_Send120
L__RS485Slave_Send121:
0x04AC	0x5000      	MOVF        R0, 0 
0x04AE	0x133B      	IORWF       FARG_RS485Slave_Send_datalen, 1, 1
;__Lib_RS485.c,212 :: 		
L_RS485Slave_Send47:
;__Lib_RS485.c,207 :: 		
0x04B0	0x2B3C      	INCF        RS485Slave_Send_i_L0, 1, 1
;__Lib_RS485.c,213 :: 		
0x04B2	0xD7CB      	BRA         L_RS485Slave_Send42
L_RS485Slave_Send43:
;__Lib_RS485.c,214 :: 		
0x04B4	0xFFE1C0A2  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x04B8	0xFFE2C0A3  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x04BC	0xFFE6C13B  	MOVFF       FARG_RS485Slave_Send_datalen, POSTINC1
0x04C0	0xF000C0A0  	MOVFF       _UART_Wr_Ptr, R0
0x04C4	0xF001C0A1  	MOVFF       _UART_Wr_Ptr+1, R1
0x04C8	0xDDE5      	RCALL       _____DoIFC
;__Lib_RS485.c,215 :: 		
0x04CA	0x0101      	MOVLB       1
0x04CC	0x513F      	MOVF        RS485Slave_Send_slave_address_L0, 0, 1
0x04CE	0x193B      	XORWF       FARG_RS485Slave_Send_datalen, 0, 1
0x04D0	0x6F3D      	MOVWF       RS485Slave_Send_crc_send_L0, 1
;__Lib_RS485.c,216 :: 		
0x04D2	0x6B3C      	CLRF        RS485Slave_Send_i_L0, 1
L_RS485Slave_Send48:
0x04D4	0x513C      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x04D6	0x5D3E      	SUBWF       RS485Slave_Send_len_L0, 0, 1
0x04D8	0xE31E      	BNC         L_RS485Slave_Send49
;__Lib_RS485.c,217 :: 		
0x04DA	0x513C      	MOVF        RS485Slave_Send_i_L0, 0, 1
0x04DC	0x2539      	ADDWF       FARG_RS485Slave_Send_data_buffer, 0, 1
0x04DE	0x6E00      	MOVWF       R0 
0x04E0	0x0E00      	MOVLW       0
0x04E2	0x213A      	ADDWFC      FARG_RS485Slave_Send_data_buffer+1, 0, 1
0x04E4	0x6E01      	MOVWF       R1 
0x04E6	0xFFD9C000  	MOVFF       R0, FSR2L
0x04EA	0xFFDAC001  	MOVFF       R1, FSR2H
0x04EE	0x50DE      	MOVF        POSTINC2, 0 
0x04F0	0x1B3D      	XORWF       RS485Slave_Send_crc_send_L0, 1, 1
;__Lib_RS485.c,218 :: 		
0x04F2	0xFFE1C0A2  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x04F6	0xFFE2C0A3  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x04FA	0xFFE9C000  	MOVFF       R0, FSR0L
0x04FE	0xFFEAC001  	MOVFF       R1, FSR0H
0x0502	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0506	0xF000C0A0  	MOVFF       _UART_Wr_Ptr, R0
0x050A	0xF001C0A1  	MOVFF       _UART_Wr_Ptr+1, R1
0x050E	0xDDC2      	RCALL       _____DoIFC
;__Lib_RS485.c,216 :: 		
0x0510	0x0101      	MOVLB       1
0x0512	0x2B3C      	INCF        RS485Slave_Send_i_L0, 1, 1
;__Lib_RS485.c,219 :: 		
0x0514	0xD7DF      	BRA         L_RS485Slave_Send48
L_RS485Slave_Send49:
;__Lib_RS485.c,221 :: 		
0x0516	0x1D3D      	COMF        RS485Slave_Send_crc_send_L0, 0, 1
0x0518	0x6E01      	MOVWF       R1 
0x051A	0xF13DC001  	MOVFF       R1, RS485Slave_Send_crc_send_L0
;__Lib_RS485.c,222 :: 		
0x051E	0x5001      	MOVF        R1, 0 
0x0520	0x0A96      	XORLW       150
0x0522	0xE004      	BZ          L__RS485Slave_Send107
0x0524	0x513D      	MOVF        RS485Slave_Send_crc_send_L0, 0, 1
0x0526	0x0AA9      	XORLW       169
0x0528	0xE001      	BZ          L__RS485Slave_Send107
0x052A	0xD001      	BRA         L_RS485Slave_Send53
L__RS485Slave_Send107:
;__Lib_RS485.c,223 :: 		
0x052C	0x2B3D      	INCF        RS485Slave_Send_crc_send_L0, 1, 1
L_RS485Slave_Send53:
;__Lib_RS485.c,224 :: 		
0x052E	0xFFE1C0A2  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0532	0xFFE2C0A3  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x0536	0xFFE6C13D  	MOVFF       RS485Slave_Send_crc_send_L0, POSTINC1
0x053A	0xF000C0A0  	MOVFF       _UART_Wr_Ptr, R0
0x053E	0xF001C0A1  	MOVFF       _UART_Wr_Ptr+1, R1
0x0542	0xDDA8      	RCALL       _____DoIFC
;__Lib_RS485.c,225 :: 		
0x0544	0xFFE1C0A2  	MOVFF       _UART_Wr_Ptr+2, FSR1L
0x0548	0xFFE2C0A3  	MOVFF       _UART_Wr_Ptr+3, FSR1H
0x054C	0x0EA9      	MOVLW       169
0x054E	0x6EE6      	MOVWF       POSTINC1 
0x0550	0xF000C0A0  	MOVFF       _UART_Wr_Ptr, R0
0x0554	0xF001C0A1  	MOVFF       _UART_Wr_Ptr+1, R1
0x0558	0xDD9D      	RCALL       _____DoIFC
;__Lib_RS485.c,227 :: 		
L_RS485Slave_Send54:
0x055A	0xF000C0AC  	MOVFF       _UART_Tx_Idle_Ptr, R0
0x055E	0xF001C0AD  	MOVFF       _UART_Tx_Idle_Ptr+1, R1
0x0562	0xDD98      	RCALL       _____DoIFC
0x0564	0x5000      	MOVF        R0, 0 
0x0566	0x0A00      	XORLW       0
0x0568	0xE101      	BNZ         L_RS485Slave_Send55
;__Lib_RS485.c,228 :: 		
0x056A	0xD7F7      	BRA         L_RS485Slave_Send54
L_RS485Slave_Send55:
;__Lib_RS485.c,230 :: 		
0x056C	0x9480      	BCF         rs485_rxtx_pin, BitPos(rs485_rxtx_pin+0) 
;__Lib_RS485.c,231 :: 		
L_end_RS485Slave_Send:
0x056E	0x0012      	RETURN      0
; end of _RS485Slave_Send
_SUart0_Write:
;pic_swuart.h,45 :: 		
;pic_swuart.h,47 :: 		
0x0570	0x8280      	BSF         Stx0_pin, BitPos(Stx0_pin+0) 
;pic_swuart.h,48 :: 		
0x0572	0xDE28      	RCALL       _Delay_1us
;pic_swuart.h,49 :: 		
0x0574	0x0E0B      	MOVLW       11
0x0576	0x6E00      	MOVWF       R0 
;pic_swuart.h,50 :: 		
0x0578	0xD00D      	BRA         ___SUart0_Write_st
;pic_swuart.h,64 :: 		
L_SUart0_Write0:
;pic_swuart.h,65 :: 		
0x057A	0x0EA9      	MOVLW       169
0x057C	0x6E02      	MOVWF       R2 
0x057E	0x2E02      	DECFSZ      R2, 1, 0
0x0580	0xD7FE      	BRA         $-2
0x0582	0x0000      	NOP
;pic_swuart.h,66 :: 		
0x0584	0x0101      	MOVLB       1
0x0586	0x3330      	RRCF        FARG_SUart0_Write_tch, 1, 1
0x0588	0x9F30      	BCF         FARG_SUart0_Write_tch, 7, 1
;pic_swuart.h,67 :: 		
0x058A	0x8F30      	BSF         FARG_SUart0_Write_tch, 7, 1
;pic_swuart.h,68 :: 		
0x058C	0xA0D8      	BTFSS       C_bit, BitPos(C_bit+0) 
0x058E	0xD002      	BRA         L_SUart0_Write3
;pic_swuart.h,69 :: 		
0x0590	0x8280      	BSF         Stx0_pin, BitPos(Stx0_pin+0) 
0x0592	0xD002      	BRA         L_SUart0_Write4
L_SUart0_Write3:
;pic_swuart.h,71 :: 		
___SUart0_Write_st:
;pic_swuart.h,72 :: 		
0x0594	0x9280      	BCF         Stx0_pin, BitPos(Stx0_pin+0) 
;pic_swuart.h,73 :: 		
0x0596	0x0000      	NOP
;pic_swuart.h,74 :: 		
L_SUart0_Write4:
;pic_swuart.h,75 :: 		
0x0598	0x0600      	DECF        R0, 1 
0x059A	0x5200      	MOVF        R0, 1 
0x059C	0xE1EE      	BNZ         L_SUart0_Write0
;pic_swuart.h,76 :: 		
L_end_SUart0_Write:
0x059E	0x0012      	RETURN      0
; end of _SUart0_Write
_init_led:
;setup.c,100 :: 		void init_led(void){
;setup.c,101 :: 		BUZZER = 1; //ADD PC
0x05A0	0x8A83      	BSF         PORTD, 5 
;setup.c,102 :: 		LED_V = 1;
0x05A2	0x8084      	BSF         PORTE, 0 
;setup.c,103 :: 		LED_A = 0;
0x05A4	0x9A82      	BCF         PORTC, 5 
;setup.c,104 :: 		LED_R = 0;
0x05A6	0x9A80      	BCF         PORTA, 5 
;setup.c,106 :: 		Delay_ms(500);
0x05A8	0x0EA3      	MOVLW       163
0x05AA	0x6E0C      	MOVWF       R12, 0
0x05AC	0x0E55      	MOVLW       85
0x05AE	0x6E0D      	MOVWF       R13, 0
L_init_led4:
0x05B0	0x2E0D      	DECFSZ      R13, 1, 0
0x05B2	0xD7FE      	BRA         L_init_led4
0x05B4	0x2E0C      	DECFSZ      R12, 1, 0
0x05B6	0xD7FC      	BRA         L_init_led4
;setup.c,108 :: 		LED_V = 0;
0x05B8	0x9084      	BCF         PORTE, 0 
;setup.c,109 :: 		LED_A = 1;
0x05BA	0x8A82      	BSF         PORTC, 5 
;setup.c,110 :: 		LED_R = 0;
0x05BC	0x9A80      	BCF         PORTA, 5 
;setup.c,112 :: 		Delay_ms(500);
0x05BE	0x0EA3      	MOVLW       163
0x05C0	0x6E0C      	MOVWF       R12, 0
0x05C2	0x0E55      	MOVLW       85
0x05C4	0x6E0D      	MOVWF       R13, 0
L_init_led5:
0x05C6	0x2E0D      	DECFSZ      R13, 1, 0
0x05C8	0xD7FE      	BRA         L_init_led5
0x05CA	0x2E0C      	DECFSZ      R12, 1, 0
0x05CC	0xD7FC      	BRA         L_init_led5
;setup.c,114 :: 		LED_V = 0;
0x05CE	0x9084      	BCF         PORTE, 0 
;setup.c,115 :: 		LED_A = 0;
0x05D0	0x9A82      	BCF         PORTC, 5 
;setup.c,116 :: 		LED_R = 1;
0x05D2	0x8A80      	BSF         PORTA, 5 
;setup.c,118 :: 		Delay_ms(500);
0x05D4	0x0EA3      	MOVLW       163
0x05D6	0x6E0C      	MOVWF       R12, 0
0x05D8	0x0E55      	MOVLW       85
0x05DA	0x6E0D      	MOVWF       R13, 0
L_init_led6:
0x05DC	0x2E0D      	DECFSZ      R13, 1, 0
0x05DE	0xD7FE      	BRA         L_init_led6
0x05E0	0x2E0C      	DECFSZ      R12, 1, 0
0x05E2	0xD7FC      	BRA         L_init_led6
;setup.c,120 :: 		LED_V = 1;
0x05E4	0x8084      	BSF         PORTE, 0 
;setup.c,121 :: 		LED_A = 1;
0x05E6	0x8A82      	BSF         PORTC, 5 
;setup.c,122 :: 		LED_R = 1;
0x05E8	0x8A80      	BSF         PORTA, 5 
;setup.c,124 :: 		}
L_end_init_led:
0x05EA	0x0012      	RETURN      0
; end of _init_led
_init_var:
;setup.c,60 :: 		void init_var(void){
;setup.c,63 :: 		contador = 0;
0x05EC	0x0101      	MOVLB       1
0x05EE	0x6B25      	CLRF        _contador, 1
0x05F0	0x6B26      	CLRF        _contador+1, 1
;setup.c,64 :: 		contador_seg = 0;
0x05F2	0x6B2A      	CLRF        _contador_seg, 1
;setup.c,65 :: 		bk = 0; //flag
0x05F4	0x922D      	BCF         _bk, BitPos(_bk+0) 
;setup.c,68 :: 		iyn = 0;
0x05F6	0x0100      	MOVLB       0
0x05F8	0x6BB6      	CLRF        _iyn, 1
;setup.c,69 :: 		ixm = 0;
0x05FA	0x6BB7      	CLRF        _ixm, 1
0x05FC	0x6BB8      	CLRF        _ixm+1, 1
0x05FE	0x6BB9      	CLRF        _ixm+2, 1
0x0600	0x6BBA      	CLRF        _ixm+3, 1
;setup.c,70 :: 		sumi = 1;
0x0602	0x0E01      	MOVLW       1
0x0604	0x6FBB      	MOVWF       _sumi, 1
;setup.c,71 :: 		jyn = 0;
0x0606	0x6BB1      	CLRF        _jyn, 1
;setup.c,72 :: 		jxm = 0;
0x0608	0x6BB2      	CLRF        _jxm, 1
0x060A	0x6BB3      	CLRF        _jxm+1, 1
0x060C	0x6BB4      	CLRF        _jxm+2, 1
0x060E	0x6BB5      	CLRF        _jxm+3, 1
;setup.c,73 :: 		sumj = 1;
0x0610	0x0E01      	MOVLW       1
0x0612	0x0101      	MOVLB       1
0x0614	0x6F21      	MOVWF       _sumj, 1
;setup.c,76 :: 		aa=2;
0x0616	0x0E02      	MOVLW       2
0x0618	0x6F29      	MOVWF       _aa, 1
;setup.c,77 :: 		bb=2;
0x061A	0x0E02      	MOVLW       2
0x061C	0x6F23      	MOVWF       _bb, 1
;setup.c,78 :: 		cc=2;
0x061E	0x0E02      	MOVLW       2
0x0620	0x6F24      	MOVWF       _cc, 1
;setup.c,79 :: 		dd=2;
0x0622	0x0E02      	MOVLW       2
0x0624	0x6F2B      	MOVWF       _dd, 1
;setup.c,80 :: 		ee=2;
0x0626	0x0E02      	MOVLW       2
0x0628	0x6F2C      	MOVWF       _ee, 1
;setup.c,84 :: 		logAindex=100;
0x062A	0x0E64      	MOVLW       100
0x062C	0x6F20      	MOVWF       _logAindex, 1
;setup.c,86 :: 		logBindex=100;
0x062E	0x0E64      	MOVLW       100
0x0630	0x6F22      	MOVWF       _logBindex, 1
;setup.c,87 :: 		logC=0;
0x0632	0x6A27      	CLRF        _logC 
;setup.c,88 :: 		pp=0; //variable para presencia
0x0634	0x902D      	BCF         _pp, BitPos(_pp+0) 
;setup.c,89 :: 		pos=0;
0x0636	0x6A22      	CLRF        _pos 
;setup.c,90 :: 		Apm=-1; Apn=-1; Apx=-1; Apy=-1;
0x0638	0x0EFF      	MOVLW       255
0x063A	0x6E28      	MOVWF       _Apm 
0x063C	0x0EFF      	MOVLW       255
0x063E	0x6E2E      	MOVWF       _Apn 
0x0640	0x0EFF      	MOVLW       255
0x0642	0x6E31      	MOVWF       _Apx 
0x0644	0x0EFF      	MOVLW       255
0x0646	0x6E32      	MOVWF       _Apy 
;setup.c,91 :: 		Bpm=-1; Bpn=-1; Bpx=-1; Bpy=-1;
0x0648	0x0EFF      	MOVLW       255
0x064A	0x6E30      	MOVWF       _Bpm 
0x064C	0x0EFF      	MOVLW       255
0x064E	0x6E17      	MOVWF       _Bpn 
0x0650	0x0EFF      	MOVLW       255
0x0652	0x6E18      	MOVWF       _Bpx 
0x0654	0x0EFF      	MOVLW       255
0x0656	0x6E15      	MOVWF       _Bpy 
;setup.c,94 :: 		resultadoA='X';
0x0658	0x0E58      	MOVLW       88
0x065A	0x6E2F      	MOVWF       _resultadoA 
;setup.c,95 :: 		resultadoB='X';
0x065C	0x0E58      	MOVLW       88
0x065E	0x6E16      	MOVWF       _resultadoB 
;setup.c,96 :: 		resultadoT='X';
0x0660	0x0E58      	MOVLW       88
0x0662	0x6E19      	MOVWF       _resultadoT 
;setup.c,98 :: 		}
L_end_init_var:
0x0664	0x0012      	RETURN      0
; end of _init_var
_logB_reset:
;log.c,64 :: 		void logB_reset(){
;log.c,66 :: 		for(jj=0; jj<logBindex;jj++){
0x0666	0x6A01      	CLRF        R1 
L_logB_reset23:
0x0668	0x0E80      	MOVLW       128
0x066A	0xBE01      	BTFSC       R1, 7 
0x066C	0x0E7F      	MOVLW       127
0x066E	0x6E00      	MOVWF       R0 
0x0670	0x0E80      	MOVLW       128
0x0672	0x5C00      	SUBWF       R0, 0 
0x0674	0xE103      	BNZ         L__logB_reset60
0x0676	0x0101      	MOVLB       1
0x0678	0x5122      	MOVF        _logBindex, 0, 1
0x067A	0x5C01      	SUBWF       R1, 0 
L__logB_reset60:
0x067C	0xE20D      	BC          L_logB_reset24
;log.c,67 :: 		logB[jj]=0;
0x067E	0x0EBC      	MOVLW       _logB
0x0680	0x6EE1      	MOVWF       FSR1L 
0x0682	0x0E00      	MOVLW       hi_addr(_logB)
0x0684	0x6EE2      	MOVWF       FSR1H 
0x0686	0x5001      	MOVF        R1, 0 
0x0688	0x26E1      	ADDWF       FSR1L, 1 
0x068A	0x0E00      	MOVLW       0
0x068C	0xBE01      	BTFSC       R1, 7 
0x068E	0x0EFF      	MOVLW       255
0x0690	0x22E2      	ADDWFC      FSR1H, 1 
0x0692	0x6AE6      	CLRF        POSTINC1 
;log.c,66 :: 		for(jj=0; jj<logBindex;jj++){
0x0694	0x2A01      	INCF        R1, 1 
;log.c,68 :: 		}
0x0696	0xD7E8      	BRA         L_logB_reset23
L_logB_reset24:
0x0698	0x0101      	MOVLB       1
;log.c,69 :: 		logBindex=0;
0x069A	0x6B22      	CLRF        _logBindex, 1
;log.c,70 :: 		Bpm=-1; Bpn=-1; Bpx=-1; Bpy=-1;
0x069C	0x0EFF      	MOVLW       255
0x069E	0x6E30      	MOVWF       _Bpm 
0x06A0	0x0EFF      	MOVLW       255
0x06A2	0x6E17      	MOVWF       _Bpn 
0x06A4	0x0EFF      	MOVLW       255
0x06A6	0x6E18      	MOVWF       _Bpx 
0x06A8	0x0EFF      	MOVLW       255
0x06AA	0x6E15      	MOVWF       _Bpy 
;log.c,71 :: 		}
L_end_logB_reset:
0x06AC	0x0012      	RETURN      0
; end of _logB_reset
_init_485:
;setup.c,46 :: 		void init_485(void){
;setup.c,47 :: 		UART1_Init(9600);                  // initialize UART1 module
0x06AE	0x86B8      	BSF         BAUDCON, 3, 0
0x06B0	0x6AB0      	CLRF        SPBRGH 
0x06B2	0x0E19      	MOVLW       25
0x06B4	0x6EAF      	MOVWF       SPBRG 
0x06B6	0x84AC      	BSF         TXSTA, 2, 0
0x06B8	0xDD86      	RCALL       _UART1_Init
;setup.c,48 :: 		Delay_ms(100);
0x06BA	0x0E21      	MOVLW       33
0x06BC	0x6E0C      	MOVWF       R12, 0
0x06BE	0x0E76      	MOVLW       118
0x06C0	0x6E0D      	MOVWF       R13, 0
L_init_4853:
0x06C2	0x2E0D      	DECFSZ      R13, 1, 0
0x06C4	0xD7FE      	BRA         L_init_4853
0x06C6	0x2E0C      	DECFSZ      R12, 1, 0
0x06C8	0xD7FC      	BRA         L_init_4853
0x06CA	0x0000      	NOP
;setup.c,49 :: 		RS485Slave_Init(slave_id);              // Intialize MCU as slave, address 160
0x06CC	0x0E0A      	MOVLW       10
0x06CE	0x0101      	MOVLB       1
0x06D0	0x6F39      	MOVWF       FARG_RS485Slave_Init_slave_address, 1
0x06D2	0xDE32      	RCALL       _RS485Slave_Init
;setup.c,52 :: 		RCIE_bit = 0;                      // enable interrupt on UART1 receive
0x06D4	0x9A9D      	BCF         RCIE_bit, BitPos(RCIE_bit+0) 
;setup.c,53 :: 		TXIE_bit = 0;                      // disable interrupt on UART1 transmit
0x06D6	0x989D      	BCF         TXIE_bit, BitPos(TXIE_bit+0) 
;setup.c,56 :: 		PEIE_bit = 0;                      // disable peripheral interrupts
0x06D8	0x9CF2      	BCF         PEIE_bit, BitPos(PEIE_bit+0) 
;setup.c,57 :: 		GIE_bit = 0;                       // disable all interrupts
0x06DA	0x9EF2      	BCF         GIE_bit, BitPos(GIE_bit+0) 
;setup.c,58 :: 		}
L_end_init_485:
0x06DC	0x0012      	RETURN      0
; end of _init_485
_rs485_slave_send:
;rs485.c,12 :: 		void rs485_slave_send(void){
;rs485.c,18 :: 		e0=ENTRAN&0xFF;
0x06DE	0x0EFF      	MOVLW       255
0x06E0	0x1423      	ANDWF       _ENTRAN, 0 
0x06E2	0x0101      	MOVLB       1
0x06E4	0x6F39      	MOVWF       FARG_tx_prepare_p0, 1
;rs485.c,19 :: 		e1=(ENTRAN&0xFF00)>>8;
0x06E6	0x0E00      	MOVLW       0
0x06E8	0x1423      	ANDWF       _ENTRAN, 0 
0x06EA	0x6E01      	MOVWF       R1 
0x06EC	0x0EFF      	MOVLW       255
0x06EE	0x1424      	ANDWF       _ENTRAN+1, 0 
0x06F0	0x6E02      	MOVWF       R2 
0x06F2	0xF003C025  	MOVFF       _ENTRAN+2, R3
0x06F6	0xF004C026  	MOVFF       _ENTRAN+3, R4
0x06FA	0x0E00      	MOVLW       0
0x06FC	0x1603      	ANDWF       R3, 1 
0x06FE	0x1604      	ANDWF       R4, 1 
0x0700	0xF00DC002  	MOVFF       R2, R13
0x0704	0xF00EC003  	MOVFF       R3, R14
0x0708	0xF00FC004  	MOVFF       R4, R15
0x070C	0x6A10      	CLRF        R16 
;rs485.c,20 :: 		e2=(ENTRAN&0xFF0000)>>16;
0x070E	0x0E00      	MOVLW       0
0x0710	0x1423      	ANDWF       _ENTRAN, 0 
0x0712	0x6E01      	MOVWF       R1 
0x0714	0x0E00      	MOVLW       0
0x0716	0x1424      	ANDWF       _ENTRAN+1, 0 
0x0718	0x6E02      	MOVWF       R2 
0x071A	0x0EFF      	MOVLW       255
0x071C	0x1425      	ANDWF       _ENTRAN+2, 0 
0x071E	0x6E03      	MOVWF       R3 
0x0720	0x0E00      	MOVLW       0
0x0722	0x1426      	ANDWF       _ENTRAN+3, 0 
0x0724	0x6E04      	MOVWF       R4 
0x0726	0xF009C003  	MOVFF       R3, R9
0x072A	0xF00AC004  	MOVFF       R4, R10
0x072E	0x6A0B      	CLRF        R11 
0x0730	0x6A0C      	CLRF        R12 
;rs485.c,21 :: 		e3=(ENTRAN&0xFF000000)>>24;
0x0732	0x0E00      	MOVLW       0
0x0734	0x1423      	ANDWF       _ENTRAN, 0 
0x0736	0x6E05      	MOVWF       R5 
0x0738	0x0E00      	MOVLW       0
0x073A	0x1424      	ANDWF       _ENTRAN+1, 0 
0x073C	0x6E06      	MOVWF       R6 
0x073E	0x0E00      	MOVLW       0
0x0740	0x1425      	ANDWF       _ENTRAN+2, 0 
0x0742	0x6E07      	MOVWF       R7 
0x0744	0x0EFF      	MOVLW       255
0x0746	0x1426      	ANDWF       _ENTRAN+3, 0 
0x0748	0x6E08      	MOVWF       R8 
0x074A	0xF000C008  	MOVFF       R8, R0
0x074E	0x6A01      	CLRF        R1 
0x0750	0x6A02      	CLRF        R2 
0x0752	0x6A03      	CLRF        R3 
0x0754	0xF130C000  	MOVFF       R0, rs485_slave_send_e3_L0
;rs485.c,22 :: 		s0=SALEN&0xFF;
0x0758	0x0EFF      	MOVLW       255
0x075A	0x141E      	ANDWF       _SALEN, 0 
0x075C	0x6F31      	MOVWF       rs485_slave_send_s0_L0, 1
;rs485.c,23 :: 		s1=(SALEN&0xFF00)>>8;
0x075E	0x0E00      	MOVLW       0
0x0760	0x141E      	ANDWF       _SALEN, 0 
0x0762	0x6E05      	MOVWF       R5 
0x0764	0x0EFF      	MOVLW       255
0x0766	0x141F      	ANDWF       _SALEN+1, 0 
0x0768	0x6E06      	MOVWF       R6 
0x076A	0xF007C020  	MOVFF       _SALEN+2, R7
0x076E	0xF008C021  	MOVFF       _SALEN+3, R8
0x0772	0x0E00      	MOVLW       0
0x0774	0x1607      	ANDWF       R7, 1 
0x0776	0x1608      	ANDWF       R8, 1 
0x0778	0xF000C006  	MOVFF       R6, R0
0x077C	0xF001C007  	MOVFF       R7, R1
0x0780	0xF002C008  	MOVFF       R8, R2
0x0784	0x6A03      	CLRF        R3 
0x0786	0xF132C000  	MOVFF       R0, rs485_slave_send_s1_L0
;rs485.c,24 :: 		s2=(SALEN&0xFF0000)>>16;
0x078A	0x0E00      	MOVLW       0
0x078C	0x141E      	ANDWF       _SALEN, 0 
0x078E	0x6E05      	MOVWF       R5 
0x0790	0x0E00      	MOVLW       0
0x0792	0x141F      	ANDWF       _SALEN+1, 0 
0x0794	0x6E06      	MOVWF       R6 
0x0796	0x0EFF      	MOVLW       255
0x0798	0x1420      	ANDWF       _SALEN+2, 0 
0x079A	0x6E07      	MOVWF       R7 
0x079C	0x0E00      	MOVLW       0
0x079E	0x1421      	ANDWF       _SALEN+3, 0 
0x07A0	0x6E08      	MOVWF       R8 
0x07A2	0xF000C007  	MOVFF       R7, R0
0x07A6	0xF001C008  	MOVFF       R8, R1
0x07AA	0x6A02      	CLRF        R2 
0x07AC	0x6A03      	CLRF        R3 
0x07AE	0xF133C000  	MOVFF       R0, rs485_slave_send_s2_L0
;rs485.c,25 :: 		s3=(SALEN&0xFF000000)>>24;
0x07B2	0x0E00      	MOVLW       0
0x07B4	0x141E      	ANDWF       _SALEN, 0 
0x07B6	0x6E05      	MOVWF       R5 
0x07B8	0x0E00      	MOVLW       0
0x07BA	0x141F      	ANDWF       _SALEN+1, 0 
0x07BC	0x6E06      	MOVWF       R6 
0x07BE	0x0E00      	MOVLW       0
0x07C0	0x1420      	ANDWF       _SALEN+2, 0 
0x07C2	0x6E07      	MOVWF       R7 
0x07C4	0x0EFF      	MOVLW       255
0x07C6	0x1421      	ANDWF       _SALEN+3, 0 
0x07C8	0x6E08      	MOVWF       R8 
0x07CA	0xF000C008  	MOVFF       R8, R0
0x07CE	0x6A01      	CLRF        R1 
0x07D0	0x6A02      	CLRF        R2 
0x07D2	0x6A03      	CLRF        R3 
0x07D4	0xF134C000  	MOVFF       R0, rs485_slave_send_s3_L0
;rs485.c,26 :: 		b0=BLOQUEOS&0xFF;
0x07D8	0x0EFF      	MOVLW       255
0x07DA	0x1429      	ANDWF       _BLOQUEOS, 0 
0x07DC	0x6F35      	MOVWF       rs485_slave_send_b0_L0, 1
;rs485.c,27 :: 		b1=(BLOQUEOS&0xFF00)>>8;
0x07DE	0x0E00      	MOVLW       0
0x07E0	0x1429      	ANDWF       _BLOQUEOS, 0 
0x07E2	0x6E05      	MOVWF       R5 
0x07E4	0x0EFF      	MOVLW       255
0x07E6	0x142A      	ANDWF       _BLOQUEOS+1, 0 
0x07E8	0x6E06      	MOVWF       R6 
0x07EA	0xF007C02B  	MOVFF       _BLOQUEOS+2, R7
0x07EE	0xF008C02C  	MOVFF       _BLOQUEOS+3, R8
0x07F2	0x0E00      	MOVLW       0
0x07F4	0x1607      	ANDWF       R7, 1 
0x07F6	0x1608      	ANDWF       R8, 1 
0x07F8	0xF000C006  	MOVFF       R6, R0
0x07FC	0xF001C007  	MOVFF       R7, R1
0x0800	0xF002C008  	MOVFF       R8, R2
0x0804	0x6A03      	CLRF        R3 
0x0806	0xF136C000  	MOVFF       R0, rs485_slave_send_b1_L0
;rs485.c,28 :: 		b2=(BLOQUEOS&0xFF0000)>>16;
0x080A	0x0E00      	MOVLW       0
0x080C	0x1429      	ANDWF       _BLOQUEOS, 0 
0x080E	0x6E05      	MOVWF       R5 
0x0810	0x0E00      	MOVLW       0
0x0812	0x142A      	ANDWF       _BLOQUEOS+1, 0 
0x0814	0x6E06      	MOVWF       R6 
0x0816	0x0EFF      	MOVLW       255
0x0818	0x142B      	ANDWF       _BLOQUEOS+2, 0 
0x081A	0x6E07      	MOVWF       R7 
0x081C	0x0E00      	MOVLW       0
0x081E	0x142C      	ANDWF       _BLOQUEOS+3, 0 
0x0820	0x6E08      	MOVWF       R8 
0x0822	0xF000C007  	MOVFF       R7, R0
0x0826	0xF001C008  	MOVFF       R8, R1
0x082A	0x6A02      	CLRF        R2 
0x082C	0x6A03      	CLRF        R3 
0x082E	0xF137C000  	MOVFF       R0, rs485_slave_send_b2_L0
;rs485.c,29 :: 		b3=(BLOQUEOS&0xFF000000)>>24;
0x0832	0x0E00      	MOVLW       0
0x0834	0x1429      	ANDWF       _BLOQUEOS, 0 
0x0836	0x6E05      	MOVWF       R5 
0x0838	0x0E00      	MOVLW       0
0x083A	0x142A      	ANDWF       _BLOQUEOS+1, 0 
0x083C	0x6E06      	MOVWF       R6 
0x083E	0x0E00      	MOVLW       0
0x0840	0x142B      	ANDWF       _BLOQUEOS+2, 0 
0x0842	0x6E07      	MOVWF       R7 
0x0844	0x0EFF      	MOVLW       255
0x0846	0x142C      	ANDWF       _BLOQUEOS+3, 0 
0x0848	0x6E08      	MOVWF       R8 
0x084A	0xF000C008  	MOVFF       R8, R0
0x084E	0x6A01      	CLRF        R1 
0x0850	0x6A02      	CLRF        R2 
0x0852	0x6A03      	CLRF        R3 
0x0854	0xF138C000  	MOVFF       R0, rs485_slave_send_b3_L0
;rs485.c,31 :: 		tx_prepare(e0,e1,e2);
0x0858	0xF13AC00D  	MOVFF       R13, FARG_tx_prepare_p1
0x085C	0xF13BC009  	MOVFF       R9, FARG_tx_prepare_p2
0x0860	0xDD81      	RCALL       _tx_prepare
;rs485.c,32 :: 		RS485Slave_Send(slave_tx_dat,3); Delay_ms(1);     //tiempo cambiado de 3 a 2 ms
0x0862	0x0E99      	MOVLW       _slave_tx_dat
0x0864	0x0101      	MOVLB       1
0x0866	0x6F39      	MOVWF       FARG_RS485Slave_Send_data_buffer, 1
0x0868	0x0E00      	MOVLW       hi_addr(_slave_tx_dat)
0x086A	0x6F3A      	MOVWF       FARG_RS485Slave_Send_data_buffer+1, 1
0x086C	0x0E03      	MOVLW       3
0x086E	0x6F3B      	MOVWF       FARG_RS485Slave_Send_datalen, 1
0x0870	0xDDBE      	RCALL       _RS485Slave_Send
0x0872	0x0E53      	MOVLW       83
0x0874	0x6E0D      	MOVWF       R13, 0
L_rs485_slave_send0:
0x0876	0x2E0D      	DECFSZ      R13, 1, 0
0x0878	0xD7FE      	BRA         L_rs485_slave_send0
;rs485.c,33 :: 		tx_prepare(e3,s0,s1);
0x087A	0xF139C130  	MOVFF       rs485_slave_send_e3_L0, FARG_tx_prepare_p0
0x087E	0xF13AC131  	MOVFF       rs485_slave_send_s0_L0, FARG_tx_prepare_p1
0x0882	0xF13BC132  	MOVFF       rs485_slave_send_s1_L0, FARG_tx_prepare_p2
0x0886	0xDD6E      	RCALL       _tx_prepare
;rs485.c,34 :: 		RS485Slave_Send(slave_tx_dat,3); Delay_ms(1);
0x0888	0x0E99      	MOVLW       _slave_tx_dat
0x088A	0x0101      	MOVLB       1
0x088C	0x6F39      	MOVWF       FARG_RS485Slave_Send_data_buffer, 1
0x088E	0x0E00      	MOVLW       hi_addr(_slave_tx_dat)
0x0890	0x6F3A      	MOVWF       FARG_RS485Slave_Send_data_buffer+1, 1
0x0892	0x0E03      	MOVLW       3
0x0894	0x6F3B      	MOVWF       FARG_RS485Slave_Send_datalen, 1
0x0896	0xDDAB      	RCALL       _RS485Slave_Send
0x0898	0x0E53      	MOVLW       83
0x089A	0x6E0D      	MOVWF       R13, 0
L_rs485_slave_send1:
0x089C	0x2E0D      	DECFSZ      R13, 1, 0
0x089E	0xD7FE      	BRA         L_rs485_slave_send1
;rs485.c,35 :: 		tx_prepare(s2,s3,b0);
0x08A0	0xF139C133  	MOVFF       rs485_slave_send_s2_L0, FARG_tx_prepare_p0
0x08A4	0xF13AC134  	MOVFF       rs485_slave_send_s3_L0, FARG_tx_prepare_p1
0x08A8	0xF13BC135  	MOVFF       rs485_slave_send_b0_L0, FARG_tx_prepare_p2
0x08AC	0xDD5B      	RCALL       _tx_prepare
;rs485.c,36 :: 		RS485Slave_Send(slave_tx_dat,3); Delay_ms(1);
0x08AE	0x0E99      	MOVLW       _slave_tx_dat
0x08B0	0x0101      	MOVLB       1
0x08B2	0x6F39      	MOVWF       FARG_RS485Slave_Send_data_buffer, 1
0x08B4	0x0E00      	MOVLW       hi_addr(_slave_tx_dat)
0x08B6	0x6F3A      	MOVWF       FARG_RS485Slave_Send_data_buffer+1, 1
0x08B8	0x0E03      	MOVLW       3
0x08BA	0x6F3B      	MOVWF       FARG_RS485Slave_Send_datalen, 1
0x08BC	0xDD98      	RCALL       _RS485Slave_Send
0x08BE	0x0E53      	MOVLW       83
0x08C0	0x6E0D      	MOVWF       R13, 0
L_rs485_slave_send2:
0x08C2	0x2E0D      	DECFSZ      R13, 1, 0
0x08C4	0xD7FE      	BRA         L_rs485_slave_send2
;rs485.c,37 :: 		tx_prepare(b1,b2,b3);
0x08C6	0xF139C136  	MOVFF       rs485_slave_send_b1_L0, FARG_tx_prepare_p0
0x08CA	0xF13AC137  	MOVFF       rs485_slave_send_b2_L0, FARG_tx_prepare_p1
0x08CE	0xF13BC138  	MOVFF       rs485_slave_send_b3_L0, FARG_tx_prepare_p2
0x08D2	0xDD48      	RCALL       _tx_prepare
;rs485.c,38 :: 		RS485Slave_Send(slave_tx_dat,3); Delay_ms(1);
0x08D4	0x0E99      	MOVLW       _slave_tx_dat
0x08D6	0x0101      	MOVLB       1
0x08D8	0x6F39      	MOVWF       FARG_RS485Slave_Send_data_buffer, 1
0x08DA	0x0E00      	MOVLW       hi_addr(_slave_tx_dat)
0x08DC	0x6F3A      	MOVWF       FARG_RS485Slave_Send_data_buffer+1, 1
0x08DE	0x0E03      	MOVLW       3
0x08E0	0x6F3B      	MOVWF       FARG_RS485Slave_Send_datalen, 1
0x08E2	0xDD85      	RCALL       _RS485Slave_Send
0x08E4	0x0E53      	MOVLW       83
0x08E6	0x6E0D      	MOVWF       R13, 0
L_rs485_slave_send3:
0x08E8	0x2E0D      	DECFSZ      R13, 1, 0
0x08EA	0xD7FE      	BRA         L_rs485_slave_send3
;rs485.c,54 :: 		}
L_end_rs485_slave_send:
0x08EC	0x0012      	RETURN      0
; end of _rs485_slave_send
_Equals_Double:
;__Lib_MathDouble.c,2469 :: 		
;__Lib_MathDouble.c,2478 :: 		
0x08EE	0x5003      	MOVF        R3, 0, 0
;__Lib_MathDouble.c,2479 :: 		
0x08F0	0x1807      	XORWF       R7, 0, 0
;__Lib_MathDouble.c,2480 :: 		
0x08F2	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2481 :: 		
0x08F4	0xF004EF8B  	GOTO        EQU_FALSE
;__Lib_MathDouble.c,2483 :: 		
0x08F8	0x5002      	MOVF        R2, 0, 0
;__Lib_MathDouble.c,2484 :: 		
0x08FA	0x1806      	XORWF       R6, 0, 0
;__Lib_MathDouble.c,2485 :: 		
0x08FC	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2486 :: 		
0x08FE	0xF004EF8B  	GOTO        EQU_FALSE
;__Lib_MathDouble.c,2488 :: 		
0x0902	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2489 :: 		
0x0904	0x1805      	XORWF       R5, 0, 0
;__Lib_MathDouble.c,2490 :: 		
0x0906	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_MathDouble.c,2491 :: 		
0x0908	0xF004EF8B  	GOTO        EQU_FALSE
;__Lib_MathDouble.c,2493 :: 		
0x090C	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2494 :: 		
0x090E	0x1804      	XORWF       R4, 0, 0
;__Lib_MathDouble.c,2495 :: 		
0x0910	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_MathDouble.c,2498 :: 		
0x0912	0x84D8      	BSF         STATUS, 2, 0
;__Lib_MathDouble.c,2499 :: 		
0x0914	0x0012      	RETURN      0
;__Lib_MathDouble.c,2501 :: 		
EQU_FALSE:
;__Lib_MathDouble.c,2503 :: 		
0x0916	0x94D8      	BCF         STATUS, 2, 0
;__Lib_MathDouble.c,2504 :: 		
0x0918	0x0012      	RETURN      0
;__Lib_MathDouble.c,2507 :: 		
L_end_Equals_Double:
0x091A	0x0012      	RETURN      0
; end of _Equals_Double
_logA_reset:
;log.c,16 :: 		void logA_reset(){
;log.c,18 :: 		for(jj=0; jj<logAindex;jj++){
0x091C	0x6A01      	CLRF        R1 
L_logA_reset1:
0x091E	0x0E80      	MOVLW       128
0x0920	0xBE01      	BTFSC       R1, 7 
0x0922	0x0E7F      	MOVLW       127
0x0924	0x6E00      	MOVWF       R0 
0x0926	0x0E80      	MOVLW       128
0x0928	0x5C00      	SUBWF       R0, 0 
0x092A	0xE103      	BNZ         L__logA_reset54
0x092C	0x0101      	MOVLB       1
0x092E	0x5120      	MOVF        _logAindex, 0, 1
0x0930	0x5C01      	SUBWF       R1, 0 
L__logA_reset54:
0x0932	0xE20D      	BC          L_logA_reset2
;log.c,19 :: 		logA[jj]=0;
0x0934	0x0E35      	MOVLW       _logA
0x0936	0x6EE1      	MOVWF       FSR1L 
0x0938	0x0E00      	MOVLW       hi_addr(_logA)
0x093A	0x6EE2      	MOVWF       FSR1H 
0x093C	0x5001      	MOVF        R1, 0 
0x093E	0x26E1      	ADDWF       FSR1L, 1 
0x0940	0x0E00      	MOVLW       0
0x0942	0xBE01      	BTFSC       R1, 7 
0x0944	0x0EFF      	MOVLW       255
0x0946	0x22E2      	ADDWFC      FSR1H, 1 
0x0948	0x6AE6      	CLRF        POSTINC1 
;log.c,18 :: 		for(jj=0; jj<logAindex;jj++){
0x094A	0x2A01      	INCF        R1, 1 
;log.c,20 :: 		}
0x094C	0xD7E8      	BRA         L_logA_reset1
L_logA_reset2:
0x094E	0x0101      	MOVLB       1
;log.c,21 :: 		logAindex=0;
0x0950	0x6B20      	CLRF        _logAindex, 1
;log.c,22 :: 		Apm=-1; Apn=-1; Apx=-1; Apy=-1;
0x0952	0x0EFF      	MOVLW       255
0x0954	0x6E28      	MOVWF       _Apm 
0x0956	0x0EFF      	MOVLW       255
0x0958	0x6E2E      	MOVWF       _Apn 
0x095A	0x0EFF      	MOVLW       255
0x095C	0x6E31      	MOVWF       _Apx 
0x095E	0x0EFF      	MOVLW       255
0x0960	0x6E32      	MOVWF       _Apy 
;log.c,23 :: 		}
L_end_logA_reset:
0x0962	0x0012      	RETURN      0
; end of _logA_reset
_PWM1_Set_Duty:
;__Lib_PWM_c21.c,43 :: 		
;__Lib_PWM_c21.c,47 :: 		
0x0964	0x50CB      	MOVF        PR2, 0 
0x0966	0x0F01      	ADDLW       1
0x0968	0x6E00      	MOVWF       R0 
0x096A	0x6A01      	CLRF        R1 
0x096C	0x0E00      	MOVLW       0
0x096E	0x2201      	ADDWFC      R1, 1 
0x0970	0xF004C130  	MOVFF       FARG_PWM1_Set_Duty_new_duty, R4
0x0974	0x0E00      	MOVLW       0
0x0976	0x6E05      	MOVWF       R5 
0x0978	0xDCB7      	RCALL       _Mul_16X16_U
0x097A	0x0E06      	MOVLW       6
0x097C	0x6E02      	MOVWF       R2 
0x097E	0xF004C000  	MOVFF       R0, R4
0x0982	0xF005C001  	MOVFF       R1, R5
0x0986	0x5002      	MOVF        R2, 0 
L__PWM1_Set_Duty10:
0x0988	0xE005      	BZ          L__PWM1_Set_Duty11
0x098A	0x3205      	RRCF        R5, 1 
0x098C	0x3204      	RRCF        R4, 1 
0x098E	0x9E05      	BCF         R5, 7 
0x0990	0x0FFF      	ADDLW       255
0x0992	0xD7FA      	BRA         L__PWM1_Set_Duty10
L__PWM1_Set_Duty11:
;__Lib_PWM_c21.c,48 :: 		
0x0994	0x0E04      	MOVLW       4
0x0996	0x6E01      	MOVWF       R1 
0x0998	0xF000C004  	MOVFF       R4, R0
0x099C	0x5001      	MOVF        R1, 0 
L__PWM1_Set_Duty12:
0x099E	0xE004      	BZ          L__PWM1_Set_Duty13
0x09A0	0x3600      	RLCF        R0, 1 
0x09A2	0x9000      	BCF         R0, 0 
0x09A4	0x0FFF      	ADDLW       255
0x09A6	0xD7FB      	BRA         L__PWM1_Set_Duty12
L__PWM1_Set_Duty13:
0x09A8	0x0E30      	MOVLW       48
0x09AA	0x1400      	ANDWF       R0, 0 
0x09AC	0x6E03      	MOVWF       R3 
;__Lib_PWM_c21.c,49 :: 		
0x09AE	0xF000C004  	MOVFF       R4, R0
0x09B2	0xF001C005  	MOVFF       R5, R1
0x09B6	0x3201      	RRCF        R1, 1 
0x09B8	0x3200      	RRCF        R0, 1 
0x09BA	0x9E01      	BCF         R1, 7 
0x09BC	0x3201      	RRCF        R1, 1 
0x09BE	0x3200      	RRCF        R0, 1 
0x09C0	0x9E01      	BCF         R1, 7 
0x09C2	0xFFBEC000  	MOVFF       R0, CCPR1L
;__Lib_PWM_c21.c,50 :: 		
0x09C6	0x0E0F      	MOVLW       15
0x09C8	0x16BD      	ANDWF       CCP1CON, 1 
;__Lib_PWM_c21.c,51 :: 		
0x09CA	0x5003      	MOVF        R3, 0 
0x09CC	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,52 :: 		
L_end_PWM1_Set_Duty:
0x09CE	0x0012      	RETURN      0
; end of _PWM1_Set_Duty
_save_data:
;eeprom.c,3 :: 		void save_data(void){
;eeprom.c,4 :: 		write_long(80,ENTRAN);
0x09D0	0x0E50      	MOVLW       80
0x09D2	0x0101      	MOVLB       1
0x09D4	0x6F39      	MOVWF       FARG_write_long_addr, 1
0x09D6	0x0E00      	MOVLW       0
0x09D8	0x6F3A      	MOVWF       FARG_write_long_addr+1, 1
0x09DA	0xF13BC023  	MOVFF       _ENTRAN, FARG_write_long_four_byte
0x09DE	0xF13CC024  	MOVFF       _ENTRAN+1, FARG_write_long_four_byte+1
0x09E2	0xF13DC025  	MOVFF       _ENTRAN+2, FARG_write_long_four_byte+2
0x09E6	0xF13EC026  	MOVFF       _ENTRAN+3, FARG_write_long_four_byte+3
0x09EA	0xDC19      	RCALL       _write_long
;eeprom.c,5 :: 		write_long(84,SALEN);
0x09EC	0x0E54      	MOVLW       84
0x09EE	0x0101      	MOVLB       1
0x09F0	0x6F39      	MOVWF       FARG_write_long_addr, 1
0x09F2	0x0E00      	MOVLW       0
0x09F4	0x6F3A      	MOVWF       FARG_write_long_addr+1, 1
0x09F6	0xF13BC01E  	MOVFF       _SALEN, FARG_write_long_four_byte
0x09FA	0xF13CC01F  	MOVFF       _SALEN+1, FARG_write_long_four_byte+1
0x09FE	0xF13DC020  	MOVFF       _SALEN+2, FARG_write_long_four_byte+2
0x0A02	0xF13EC021  	MOVFF       _SALEN+3, FARG_write_long_four_byte+3
0x0A06	0xDC0B      	RCALL       _write_long
;eeprom.c,6 :: 		write_long(88,BLOQUEOS);
0x0A08	0x0E58      	MOVLW       88
0x0A0A	0x0101      	MOVLB       1
0x0A0C	0x6F39      	MOVWF       FARG_write_long_addr, 1
0x0A0E	0x0E00      	MOVLW       0
0x0A10	0x6F3A      	MOVWF       FARG_write_long_addr+1, 1
0x0A12	0xF13BC029  	MOVFF       _BLOQUEOS, FARG_write_long_four_byte
0x0A16	0xF13CC02A  	MOVFF       _BLOQUEOS+1, FARG_write_long_four_byte+1
0x0A1A	0xF13DC02B  	MOVFF       _BLOQUEOS+2, FARG_write_long_four_byte+2
0x0A1E	0xF13EC02C  	MOVFF       _BLOQUEOS+3, FARG_write_long_four_byte+3
0x0A22	0xF001EC0F  	CALL        _write_long, 0
;eeprom.c,7 :: 		write_long(92,555);
0x0A26	0x0E5C      	MOVLW       92
0x0A28	0x0101      	MOVLB       1
0x0A2A	0x6F39      	MOVWF       FARG_write_long_addr, 1
0x0A2C	0x0E00      	MOVLW       0
0x0A2E	0x6F3A      	MOVWF       FARG_write_long_addr+1, 1
0x0A30	0x0E2B      	MOVLW       43
0x0A32	0x6F3B      	MOVWF       FARG_write_long_four_byte, 1
0x0A34	0x0E02      	MOVLW       2
0x0A36	0x6F3C      	MOVWF       FARG_write_long_four_byte+1, 1
0x0A38	0x0E00      	MOVLW       0
0x0A3A	0x6F3D      	MOVWF       FARG_write_long_four_byte+2, 1
0x0A3C	0x6F3E      	MOVWF       FARG_write_long_four_byte+3, 1
0x0A3E	0xF001EC0F  	CALL        _write_long, 0
;eeprom.c,8 :: 		Delay_ms(20);
0x0A42	0x0E07      	MOVLW       7
0x0A44	0x6E0C      	MOVWF       R12, 0
0x0A46	0x0E7D      	MOVLW       125
0x0A48	0x6E0D      	MOVWF       R13, 0
L_save_data0:
0x0A4A	0x2E0D      	DECFSZ      R13, 1, 0
0x0A4C	0xD7FE      	BRA         L_save_data0
0x0A4E	0x2E0C      	DECFSZ      R12, 1, 0
0x0A50	0xD7FC      	BRA         L_save_data0
;eeprom.c,9 :: 		}
L_end_save_data:
0x0A52	0x0012      	RETURN      0
; end of _save_data
_word2double:
;__Lib_MathDouble.c,2335 :: 		
;__Lib_MathDouble.c,2344 :: 		
0x0A54	0x5000      	MOVF        R0, 0, 0
;__Lib_MathDouble.c,2345 :: 		
0x0A56	0x6E08      	MOVWF       R8, 0
;__Lib_MathDouble.c,2346 :: 		
0x0A58	0x5001      	MOVF        R1, 0, 0
;__Lib_MathDouble.c,2347 :: 		
0x0A5A	0x6E00      	MOVWF       R0, 0
;__Lib_MathDouble.c,2348 :: 		
0x0A5C	0x6A01      	CLRF        R1, 0
;__Lib_MathDouble.c,2349 :: 		
0x0A5E	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2350 :: 		
0x0A60	0x6A03      	CLRF        R3, 0
;__Lib_MathDouble.c,2353 :: 		
0x0A62	0x6A0B      	CLRF        R11, 0
;__Lib_MathDouble.c,2354 :: 		
0x0A64	0x6A0C      	CLRF        R12, 0
;__Lib_MathDouble.c,2356 :: 		
0x0A66	0x0E96      	MOVLW       150
;__Lib_MathDouble.c,2357 :: 		
0x0A68	0x6E03      	MOVWF       R3, 0
;__Lib_MathDouble.c,2358 :: 		
0x0A6A	0x6A0A      	CLRF        R10, 0
;__Lib_MathDouble.c,2360 :: 		
0x0A6C	0xF001C000  	MOVFF       R0, R1
;__Lib_MathDouble.c,2361 :: 		
0x0A70	0xF000C008  	MOVFF       R8, R0
;__Lib_MathDouble.c,2362 :: 		
0x0A74	0x6A08      	CLRF        R8, 0
;__Lib_MathDouble.c,2363 :: 		
0x0A76	0x6A02      	CLRF        R2, 0
;__Lib_MathDouble.c,2365 :: 		
0x0A78	0xDC81      	RCALL       _NRM3232
;__Lib_MathDouble.c,2366 :: 		
L_end_word2double:
0x0A7A	0x0012      	RETURN      0
; end of _word2double
_PWM1_Init:
;__Lib_PWM_c21.c,36 :: 		
;__Lib_PWM_c21.c,37 :: 		
;__Lib_PWM_c21.c,38 :: 		
0x0A7C	0x6ABE      	CLRF        CCPR1L 
;__Lib_PWM_c21.c,39 :: 		
0x0A7E	0x98BD      	BCF         CCP1CON, 4 
;__Lib_PWM_c21.c,40 :: 		
0x0A80	0x9ABD      	BCF         CCP1CON, 5 
;__Lib_PWM_c21.c,41 :: 		
L_end_PWM1_Init:
0x0A82	0x0012      	RETURN      0
; end of _PWM1_Init
_PWM1_Start:
;__Lib_PWM_c21.c,54 :: 		
;__Lib_PWM_c21.c,55 :: 		
0x0A84	0x9494      	BCF         TRISC2_bit, BitPos(TRISC2_bit+0) 
;__Lib_PWM_c21.c,56 :: 		
0x0A86	0x84CA      	BSF         T2CON, 2 
;__Lib_PWM_c21.c,57 :: 		
0x0A88	0x0E0C      	MOVLW       12
0x0A8A	0x12BD      	IORWF       CCP1CON, 1 
;__Lib_PWM_c21.c,58 :: 		
L_end_PWM1_Start:
0x0A8C	0x0012      	RETURN      0
; end of _PWM1_Start
_read_data:
;eeprom.c,11 :: 		void read_data(void){
;eeprom.c,12 :: 		ENTRAN=read_long(80);
0x0A8E	0x0E50      	MOVLW       80
0x0A90	0x0101      	MOVLB       1
0x0A92	0x6F39      	MOVWF       FARG_read_long_addr, 1
0x0A94	0x0E00      	MOVLW       0
0x0A96	0x6F3A      	MOVWF       FARG_read_long_addr+1, 1
0x0A98	0xF000EC72  	CALL        _read_long, 0
0x0A9C	0xF023C000  	MOVFF       R0, _ENTRAN
0x0AA0	0xF024C001  	MOVFF       R1, _ENTRAN+1
0x0AA4	0xF025C002  	MOVFF       R2, _ENTRAN+2
0x0AA8	0xF026C003  	MOVFF       R3, _ENTRAN+3
;eeprom.c,13 :: 		SALEN=read_long(84);
0x0AAC	0x0E54      	MOVLW       84
0x0AAE	0x6F39      	MOVWF       FARG_read_long_addr, 1
0x0AB0	0x0E00      	MOVLW       0
0x0AB2	0x6F3A      	MOVWF       FARG_read_long_addr+1, 1
0x0AB4	0xF000EC72  	CALL        _read_long, 0
0x0AB8	0xF01EC000  	MOVFF       R0, _SALEN
0x0ABC	0xF01FC001  	MOVFF       R1, _SALEN+1
0x0AC0	0xF020C002  	MOVFF       R2, _SALEN+2
0x0AC4	0xF021C003  	MOVFF       R3, _SALEN+3
;eeprom.c,14 :: 		BLOQUEOS=read_long(88);
0x0AC8	0x0E58      	MOVLW       88
0x0ACA	0x6F39      	MOVWF       FARG_read_long_addr, 1
0x0ACC	0x0E00      	MOVLW       0
0x0ACE	0x6F3A      	MOVWF       FARG_read_long_addr+1, 1
0x0AD0	0xF000EC72  	CALL        _read_long, 0
0x0AD4	0xF029C000  	MOVFF       R0, _BLOQUEOS
0x0AD8	0xF02AC001  	MOVFF       R1, _BLOQUEOS+1
0x0ADC	0xF02BC002  	MOVFF       R2, _BLOQUEOS+2
0x0AE0	0xF02CC003  	MOVFF       R3, _BLOQUEOS+3
;eeprom.c,15 :: 		Delay_ms(20);
0x0AE4	0x0E07      	MOVLW       7
0x0AE6	0x6E0C      	MOVWF       R12, 0
0x0AE8	0x0E7D      	MOVLW       125
0x0AEA	0x6E0D      	MOVWF       R13, 0
L_read_data1:
0x0AEC	0x2E0D      	DECFSZ      R13, 1, 0
0x0AEE	0xD7FE      	BRA         L_read_data1
0x0AF0	0x2E0C      	DECFSZ      R12, 1, 0
0x0AF2	0xD7FC      	BRA         L_read_data1
;eeprom.c,16 :: 		}
L_end_read_data:
0x0AF4	0x0012      	RETURN      0
; end of _read_data
_init_setup:
;setup.c,7 :: 		void init_setup(void){
;setup.c,10 :: 		NUMPER = 0;
0x0AF6	0x6A1A      	CLRF        _NUMPER 
0x0AF8	0x6A1B      	CLRF        _NUMPER+1 
0x0AFA	0x6A1C      	CLRF        _NUMPER+2 
0x0AFC	0x6A1D      	CLRF        _NUMPER+3 
;setup.c,11 :: 		if(read_long(92)==555){
0x0AFE	0x0E5C      	MOVLW       92
0x0B00	0x0101      	MOVLB       1
0x0B02	0x6F39      	MOVWF       FARG_read_long_addr, 1
0x0B04	0x0E00      	MOVLW       0
0x0B06	0x6F3A      	MOVWF       FARG_read_long_addr+1, 1
0x0B08	0xF000EC72  	CALL        _read_long, 0
0x0B0C	0x0E00      	MOVLW       0
0x0B0E	0x6E04      	MOVWF       R4 
0x0B10	0x1803      	XORWF       R3, 0 
0x0B12	0xE108      	BNZ         L__init_setup8
0x0B14	0x5004      	MOVF        R4, 0 
0x0B16	0x1802      	XORWF       R2, 0 
0x0B18	0xE105      	BNZ         L__init_setup8
0x0B1A	0x0E02      	MOVLW       2
0x0B1C	0x1801      	XORWF       R1, 0 
0x0B1E	0xE102      	BNZ         L__init_setup8
0x0B20	0x5000      	MOVF        R0, 0 
0x0B22	0x0A2B      	XORLW       43
L__init_setup8:
0x0B24	0xE102      	BNZ         L_init_setup0
;setup.c,12 :: 		read_data();
0x0B26	0xDFB3      	RCALL       _read_data
;setup.c,13 :: 		}
0x0B28	0xD00D      	BRA         L_init_setup1
L_init_setup0:
;setup.c,15 :: 		SALEN = 0;
0x0B2A	0x6A1E      	CLRF        _SALEN 
0x0B2C	0x6A1F      	CLRF        _SALEN+1 
0x0B2E	0x6A20      	CLRF        _SALEN+2 
0x0B30	0x6A21      	CLRF        _SALEN+3 
;setup.c,16 :: 		ENTRAN = 0;
0x0B32	0x6A23      	CLRF        _ENTRAN 
0x0B34	0x6A24      	CLRF        _ENTRAN+1 
0x0B36	0x6A25      	CLRF        _ENTRAN+2 
0x0B38	0x6A26      	CLRF        _ENTRAN+3 
;setup.c,17 :: 		BLOQUEOS = 0;
0x0B3A	0x6A29      	CLRF        _BLOQUEOS 
0x0B3C	0x6A2A      	CLRF        _BLOQUEOS+1 
0x0B3E	0x6A2B      	CLRF        _BLOQUEOS+2 
0x0B40	0x6A2C      	CLRF        _BLOQUEOS+3 
;setup.c,18 :: 		save_data();
0x0B42	0xDF46      	RCALL       _save_data
;setup.c,19 :: 		}
L_init_setup1:
;setup.c,21 :: 		TRISA = 0b11011011; // salidas =0  entradas=1
0x0B44	0x0EDB      	MOVLW       219
0x0B46	0x6E92      	MOVWF       TRISA 
;setup.c,22 :: 		TRISB = 0b11111001;
0x0B48	0x0EF9      	MOVLW       249
0x0B4A	0x6E93      	MOVWF       TRISB 
;setup.c,23 :: 		TRISC = 0b11011011;
0x0B4C	0x0EDB      	MOVLW       219
0x0B4E	0x6E94      	MOVWF       TRISC 
;setup.c,24 :: 		TRISD = 0b11011011;
0x0B50	0x0EDB      	MOVLW       219
0x0B52	0x6E95      	MOVWF       TRISD 
;setup.c,25 :: 		TRISE = 0b00000110;
0x0B54	0x0E06      	MOVLW       6
0x0B56	0x6E96      	MOVWF       TRISE 
;setup.c,27 :: 		ADCON1= 0b00001111; // Configure AN pins as digital I/O
0x0B58	0x0E0F      	MOVLW       15
0x0B5A	0x6EC1      	MOVWF       ADCON1 
;setup.c,28 :: 		CMCON = 0b00000111; // Disable comparators
0x0B5C	0x0E07      	MOVLW       7
0x0B5E	0x6EB4      	MOVWF       CMCON 
;setup.c,31 :: 		init_led();
0x0B60	0xDD1F      	RCALL       _init_led
;setup.c,32 :: 		init_485();
0x0B62	0xDDA5      	RCALL       _init_485
;setup.c,33 :: 		init_var();
0x0B64	0xDD43      	RCALL       _init_var
;setup.c,35 :: 		logA_reset();
0x0B66	0xDEDA      	RCALL       _logA_reset
;setup.c,36 :: 		logB_reset();
0x0B68	0xDD7E      	RCALL       _logB_reset
;setup.c,39 :: 		PWM1_Init(36000);
0x0B6A	0x90CA      	BCF         T2CON, 0, 0
0x0B6C	0x92CA      	BCF         T2CON, 1, 0
0x0B6E	0x0E05      	MOVLW       5
0x0B70	0x6ECB      	MOVWF       PR2, 0
0x0B72	0xDF84      	RCALL       _PWM1_Init
;setup.c,40 :: 		PWM1_Set_Duty(25);
0x0B74	0x0E19      	MOVLW       25
0x0B76	0x6F30      	MOVWF       FARG_PWM1_Set_Duty_new_duty, 1
0x0B78	0xDEF5      	RCALL       _PWM1_Set_Duty
;setup.c,41 :: 		PWM1_Start();
0x0B7A	0xDF84      	RCALL       _PWM1_Start
;setup.c,43 :: 		Delay_ms(100);
0x0B7C	0x0E21      	MOVLW       33
0x0B7E	0x6E0C      	MOVWF       R12, 0
0x0B80	0x0E76      	MOVLW       118
0x0B82	0x6E0D      	MOVWF       R13, 0
L_init_setup2:
0x0B84	0x2E0D      	DECFSZ      R13, 1, 0
0x0B86	0xD7FE      	BRA         L_init_setup2
0x0B88	0x2E0C      	DECFSZ      R12, 1, 0
0x0B8A	0xD7FC      	BRA         L_init_setup2
0x0B8C	0x0000      	NOP
;setup.c,44 :: 		}
L_end_init_setup:
0x0B8E	0x0012      	RETURN      0
; end of _init_setup
_counter:
;counter.c,3 :: 		void counter(void){
;counter.c,5 :: 		if(aa!=0 && bb!=0 && cc!=0 && dd!=0 && ee!=0){ //cuando todo estan recibiendo luz
0x0B90	0x0101      	MOVLB       1
0x0B92	0x5129      	MOVF        _aa, 0, 1
0x0B94	0x0A00      	XORLW       0
0x0B96	0xB4D8      	BTFSC       STATUS, 2 
0x0B98	0xD12B      	BRA         L_counter2
0x0B9A	0x5123      	MOVF        _bb, 0, 1
0x0B9C	0x0A00      	XORLW       0
0x0B9E	0xB4D8      	BTFSC       STATUS, 2 
0x0BA0	0xD127      	BRA         L_counter2
0x0BA2	0x5124      	MOVF        _cc, 0, 1
0x0BA4	0x0A00      	XORLW       0
0x0BA6	0xB4D8      	BTFSC       STATUS, 2 
0x0BA8	0xD123      	BRA         L_counter2
0x0BAA	0x512B      	MOVF        _dd, 0, 1
0x0BAC	0x0A00      	XORLW       0
0x0BAE	0xB4D8      	BTFSC       STATUS, 2 
0x0BB0	0xD11F      	BRA         L_counter2
0x0BB2	0x512C      	MOVF        _ee, 0, 1
0x0BB4	0x0A00      	XORLW       0
0x0BB6	0xB4D8      	BTFSC       STATUS, 2 
0x0BB8	0xD11B      	BRA         L_counter2
L__counter72:
;counter.c,6 :: 		if(bk==1){
0x0BBA	0xA22D      	BTFSS       _bk, BitPos(_bk+0) 
0x0BBC	0xD003      	BRA         L_counter3
;counter.c,7 :: 		contador_seg=0;
0x0BBE	0x6B2A      	CLRF        _contador_seg, 1
;counter.c,8 :: 		BUZZER = 1;
0x0BC0	0x8A83      	BSF         PORTD, 5 
;counter.c,9 :: 		bk=0;
0x0BC2	0x922D      	BCF         _bk, BitPos(_bk+0) 
;counter.c,10 :: 		}
L_counter3:
;counter.c,11 :: 		if(pp==1){ //flanco descendente
0x0BC4	0xA02D      	BTFSS       _pp, BitPos(_pp+0) 
0x0BC6	0xD114      	BRA         L_counter4
;counter.c,13 :: 		if(logC>=2){ //piso plano
0x0BC8	0x0E02      	MOVLW       2
0x0BCA	0x5C27      	SUBWF       _logC, 0 
0x0BCC	0xA0D8      	BTFSS       STATUS, 0 
0x0BCE	0xD0E8      	BRA         L_counter5
;counter.c,17 :: 		if(Apm!=-1 && Apn!=-1 && Apx!=-1 && Apy!=-1){
0x0BD0	0x5028      	MOVF        _Apm, 0 
0x0BD2	0x0AFF      	XORLW       255
0x0BD4	0xE029      	BZ          L_counter8
0x0BD6	0x502E      	MOVF        _Apn, 0 
0x0BD8	0x0AFF      	XORLW       255
0x0BDA	0xE026      	BZ          L_counter8
0x0BDC	0x5031      	MOVF        _Apx, 0 
0x0BDE	0x0AFF      	XORLW       255
0x0BE0	0xE023      	BZ          L_counter8
0x0BE2	0x5032      	MOVF        _Apy, 0 
0x0BE4	0x0AFF      	XORLW       255
0x0BE6	0xE020      	BZ          L_counter8
L__counter71:
;counter.c,18 :: 		if(Apm>Apx){
0x0BE8	0x0E80      	MOVLW       128
0x0BEA	0x1831      	XORWF       _Apx, 0 
0x0BEC	0x6E00      	MOVWF       R0 
0x0BEE	0x0E80      	MOVLW       128
0x0BF0	0x1828      	XORWF       _Apm, 0 
0x0BF2	0x5C00      	SUBWF       R0, 0 
0x0BF4	0xE20D      	BC          L_counter9
;counter.c,20 :: 		if(Apn>Apy){ // entra-entra
0x0BF6	0x0E80      	MOVLW       128
0x0BF8	0x1832      	XORWF       _Apy, 0 
0x0BFA	0x6E00      	MOVWF       R0 
0x0BFC	0x0E80      	MOVLW       128
0x0BFE	0x182E      	XORWF       _Apn, 0 
0x0C00	0x5C00      	SUBWF       R0, 0 
0x0C02	0xE203      	BC          L_counter10
;counter.c,22 :: 		resultadoA='E';
0x0C04	0x0E45      	MOVLW       69
0x0C06	0x6E2F      	MOVWF       _resultadoA 
;counter.c,23 :: 		}
0x0C08	0xD002      	BRA         L_counter11
L_counter10:
;counter.c,26 :: 		resultadoA='Q';
0x0C0A	0x0E51      	MOVLW       81
0x0C0C	0x6E2F      	MOVWF       _resultadoA 
;counter.c,27 :: 		}
L_counter11:
;counter.c,28 :: 		}
0x0C0E	0xD00C      	BRA         L_counter12
L_counter9:
;counter.c,31 :: 		if(Apn>Apy){ //entra-sale
0x0C10	0x0E80      	MOVLW       128
0x0C12	0x1832      	XORWF       _Apy, 0 
0x0C14	0x6E00      	MOVWF       R0 
0x0C16	0x0E80      	MOVLW       128
0x0C18	0x182E      	XORWF       _Apn, 0 
0x0C1A	0x5C00      	SUBWF       R0, 0 
0x0C1C	0xE203      	BC          L_counter13
;counter.c,33 :: 		resultadoA='P';
0x0C1E	0x0E50      	MOVLW       80
0x0C20	0x6E2F      	MOVWF       _resultadoA 
;counter.c,34 :: 		}
0x0C22	0xD002      	BRA         L_counter14
L_counter13:
;counter.c,37 :: 		resultadoA='S';
0x0C24	0x0E53      	MOVLW       83
0x0C26	0x6E2F      	MOVWF       _resultadoA 
;counter.c,38 :: 		}
L_counter14:
;counter.c,39 :: 		}
L_counter12:
;counter.c,40 :: 		}
L_counter8:
;counter.c,44 :: 		if(Bpm!=-1 && Bpn!=-1 && Bpx!=-1 && Bpy!=-1){
0x0C28	0x5030      	MOVF        _Bpm, 0 
0x0C2A	0x0AFF      	XORLW       255
0x0C2C	0xE029      	BZ          L_counter17
0x0C2E	0x5017      	MOVF        _Bpn, 0 
0x0C30	0x0AFF      	XORLW       255
0x0C32	0xE026      	BZ          L_counter17
0x0C34	0x5018      	MOVF        _Bpx, 0 
0x0C36	0x0AFF      	XORLW       255
0x0C38	0xE023      	BZ          L_counter17
0x0C3A	0x5015      	MOVF        _Bpy, 0 
0x0C3C	0x0AFF      	XORLW       255
0x0C3E	0xE020      	BZ          L_counter17
L__counter70:
;counter.c,45 :: 		if(Bpm>Bpx){
0x0C40	0x0E80      	MOVLW       128
0x0C42	0x1818      	XORWF       _Bpx, 0 
0x0C44	0x6E00      	MOVWF       R0 
0x0C46	0x0E80      	MOVLW       128
0x0C48	0x1830      	XORWF       _Bpm, 0 
0x0C4A	0x5C00      	SUBWF       R0, 0 
0x0C4C	0xE20D      	BC          L_counter18
;counter.c,47 :: 		if(Bpn>Bpy){ // entra-entra
0x0C4E	0x0E80      	MOVLW       128
0x0C50	0x1815      	XORWF       _Bpy, 0 
0x0C52	0x6E00      	MOVWF       R0 
0x0C54	0x0E80      	MOVLW       128
0x0C56	0x1817      	XORWF       _Bpn, 0 
0x0C58	0x5C00      	SUBWF       R0, 0 
0x0C5A	0xE203      	BC          L_counter19
;counter.c,49 :: 		resultadoB='E';
0x0C5C	0x0E45      	MOVLW       69
0x0C5E	0x6E16      	MOVWF       _resultadoB 
;counter.c,50 :: 		}
0x0C60	0xD002      	BRA         L_counter20
L_counter19:
;counter.c,53 :: 		resultadoB='Q';
0x0C62	0x0E51      	MOVLW       81
0x0C64	0x6E16      	MOVWF       _resultadoB 
;counter.c,54 :: 		}
L_counter20:
;counter.c,55 :: 		}
0x0C66	0xD00C      	BRA         L_counter21
L_counter18:
;counter.c,58 :: 		if(Bpn>Bpy){ //entro-sale
0x0C68	0x0E80      	MOVLW       128
0x0C6A	0x1815      	XORWF       _Bpy, 0 
0x0C6C	0x6E00      	MOVWF       R0 
0x0C6E	0x0E80      	MOVLW       128
0x0C70	0x1817      	XORWF       _Bpn, 0 
0x0C72	0x5C00      	SUBWF       R0, 0 
0x0C74	0xE203      	BC          L_counter22
;counter.c,60 :: 		resultadoB='P';
0x0C76	0x0E50      	MOVLW       80
0x0C78	0x6E16      	MOVWF       _resultadoB 
;counter.c,61 :: 		}
0x0C7A	0xD002      	BRA         L_counter23
L_counter22:
;counter.c,64 :: 		resultadoB='S';
0x0C7C	0x0E53      	MOVLW       83
0x0C7E	0x6E16      	MOVWF       _resultadoB 
;counter.c,65 :: 		}
L_counter23:
;counter.c,66 :: 		}
L_counter21:
;counter.c,67 :: 		}
L_counter17:
;counter.c,69 :: 		if(resultadoA!='X' && resultadoB!='X'){
0x0C80	0x502F      	MOVF        _resultadoA, 0 
0x0C82	0x0A58      	XORLW       88
0x0C84	0xE01D      	BZ          L_counter26
0x0C86	0x5016      	MOVF        _resultadoB, 0 
0x0C88	0x0A58      	XORLW       88
0x0C8A	0xE01A      	BZ          L_counter26
L__counter69:
;counter.c,70 :: 		if(resultadoB=='S' || (resultadoA=='S' && resultadoB=='P')){
0x0C8C	0x5016      	MOVF        _resultadoB, 0 
0x0C8E	0x0A53      	XORLW       83
0x0C90	0xE008      	BZ          L__counter67
0x0C92	0x502F      	MOVF        _resultadoA, 0 
0x0C94	0x0A53      	XORLW       83
0x0C96	0xE104      	BNZ         L__counter68
0x0C98	0x5016      	MOVF        _resultadoB, 0 
0x0C9A	0x0A50      	XORLW       80
0x0C9C	0xE101      	BNZ         L__counter68
0x0C9E	0xD001      	BRA         L__counter67
L__counter68:
0x0CA0	0xD002      	BRA         L_counter31
L__counter67:
;counter.c,71 :: 		resultadoT='S';
0x0CA2	0x0E53      	MOVLW       83
0x0CA4	0x6E19      	MOVWF       _resultadoT 
;counter.c,72 :: 		}
L_counter31:
;counter.c,73 :: 		if(resultadoB=='E' || (resultadoA=='E' && resultadoB=='Q')){
0x0CA6	0x5016      	MOVF        _resultadoB, 0 
0x0CA8	0x0A45      	XORLW       69
0x0CAA	0xE008      	BZ          L__counter65
0x0CAC	0x502F      	MOVF        _resultadoA, 0 
0x0CAE	0x0A45      	XORLW       69
0x0CB0	0xE104      	BNZ         L__counter66
0x0CB2	0x5016      	MOVF        _resultadoB, 0 
0x0CB4	0x0A51      	XORLW       81
0x0CB6	0xE101      	BNZ         L__counter66
0x0CB8	0xD001      	BRA         L__counter65
L__counter66:
0x0CBA	0xD002      	BRA         L_counter36
L__counter65:
;counter.c,74 :: 		resultadoT='E';
0x0CBC	0x0E45      	MOVLW       69
0x0CBE	0x6E19      	MOVWF       _resultadoT 
;counter.c,75 :: 		}
L_counter36:
;counter.c,76 :: 		}
L_counter26:
;counter.c,78 :: 		if(pos==1){
0x0CC0	0x5022      	MOVF        _pos, 0 
0x0CC2	0x0A01      	XORLW       1
0x0CC4	0xE106      	BNZ         L_counter37
;counter.c,79 :: 		if(resultadoT=='E'){ resultadoT='X'; }
0x0CC6	0x5019      	MOVF        _resultadoT, 0 
0x0CC8	0x0A45      	XORLW       69
0x0CCA	0xE102      	BNZ         L_counter38
0x0CCC	0x0E58      	MOVLW       88
0x0CCE	0x6E19      	MOVWF       _resultadoT 
L_counter38:
;counter.c,80 :: 		}
0x0CD0	0xD035      	BRA         L_counter39
L_counter37:
;counter.c,81 :: 		else if(pos==11){
0x0CD2	0x5022      	MOVF        _pos, 0 
0x0CD4	0x0A0B      	XORLW       11
0x0CD6	0xE106      	BNZ         L_counter40
;counter.c,82 :: 		if(resultadoT=='S'){ resultadoT='X'; }
0x0CD8	0x5019      	MOVF        _resultadoT, 0 
0x0CDA	0x0A53      	XORLW       83
0x0CDC	0xE102      	BNZ         L_counter41
0x0CDE	0x0E58      	MOVLW       88
0x0CE0	0x6E19      	MOVWF       _resultadoT 
L_counter41:
;counter.c,83 :: 		}
0x0CE2	0xD02C      	BRA         L_counter42
L_counter40:
;counter.c,84 :: 		else if(pos==111){
0x0CE4	0x5022      	MOVF        _pos, 0 
0x0CE6	0x0A6F      	XORLW       111
0x0CE8	0xE10C      	BNZ         L_counter43
;counter.c,85 :: 		if(resultadoT=='E'){ resultadoT='S'; }
0x0CEA	0x5019      	MOVF        _resultadoT, 0 
0x0CEC	0x0A45      	XORLW       69
0x0CEE	0xE103      	BNZ         L_counter44
0x0CF0	0x0E53      	MOVLW       83
0x0CF2	0x6E19      	MOVWF       _resultadoT 
0x0CF4	0xD005      	BRA         L_counter45
L_counter44:
;counter.c,86 :: 		else if(resultadoT=='S'){ resultadoT='E'; }
0x0CF6	0x5019      	MOVF        _resultadoT, 0 
0x0CF8	0x0A53      	XORLW       83
0x0CFA	0xE102      	BNZ         L_counter46
0x0CFC	0x0E45      	MOVLW       69
0x0CFE	0x6E19      	MOVWF       _resultadoT 
L_counter46:
L_counter45:
;counter.c,87 :: 		}
0x0D00	0xD01D      	BRA         L_counter47
L_counter43:
;counter.c,88 :: 		else if(pos==110){
0x0D02	0x5022      	MOVF        _pos, 0 
0x0D04	0x0A6E      	XORLW       110
0x0D06	0xE10C      	BNZ         L_counter48
;counter.c,89 :: 		if(resultadoT=='E'){ resultadoT='S'; }
0x0D08	0x5019      	MOVF        _resultadoT, 0 
0x0D0A	0x0A45      	XORLW       69
0x0D0C	0xE103      	BNZ         L_counter49
0x0D0E	0x0E53      	MOVLW       83
0x0D10	0x6E19      	MOVWF       _resultadoT 
0x0D12	0xD005      	BRA         L_counter50
L_counter49:
;counter.c,90 :: 		else if(resultadoT=='S'){ resultadoT='X'; }
0x0D14	0x5019      	MOVF        _resultadoT, 0 
0x0D16	0x0A53      	XORLW       83
0x0D18	0xE102      	BNZ         L_counter51
0x0D1A	0x0E58      	MOVLW       88
0x0D1C	0x6E19      	MOVWF       _resultadoT 
L_counter51:
L_counter50:
;counter.c,91 :: 		}
0x0D1E	0xD00E      	BRA         L_counter52
L_counter48:
;counter.c,92 :: 		else if(pos==100){
0x0D20	0x5022      	MOVF        _pos, 0 
0x0D22	0x0A64      	XORLW       100
0x0D24	0xE10B      	BNZ         L_counter53
;counter.c,93 :: 		if(resultadoT=='E'){ resultadoT='X'; }
0x0D26	0x5019      	MOVF        _resultadoT, 0 
0x0D28	0x0A45      	XORLW       69
0x0D2A	0xE103      	BNZ         L_counter54
0x0D2C	0x0E58      	MOVLW       88
0x0D2E	0x6E19      	MOVWF       _resultadoT 
0x0D30	0xD005      	BRA         L_counter55
L_counter54:
;counter.c,94 :: 		else if(resultadoT=='S'){ resultadoT='E'; }
0x0D32	0x5019      	MOVF        _resultadoT, 0 
0x0D34	0x0A53      	XORLW       83
0x0D36	0xE102      	BNZ         L_counter56
0x0D38	0x0E45      	MOVLW       69
0x0D3A	0x6E19      	MOVWF       _resultadoT 
L_counter56:
L_counter55:
;counter.c,95 :: 		}
L_counter53:
L_counter52:
L_counter47:
L_counter42:
L_counter39:
;counter.c,98 :: 		if(resultadoT=='E'){
0x0D3C	0x5019      	MOVF        _resultadoT, 0 
0x0D3E	0x0A45      	XORLW       69
0x0D40	0xE116      	BNZ         L_counter57
;counter.c,99 :: 		ENTRAN++;
0x0D42	0x0E01      	MOVLW       1
0x0D44	0x2623      	ADDWF       _ENTRAN, 1 
0x0D46	0x0E00      	MOVLW       0
0x0D48	0x2224      	ADDWFC      _ENTRAN+1, 1 
0x0D4A	0x2225      	ADDWFC      _ENTRAN+2, 1 
0x0D4C	0x2226      	ADDWFC      _ENTRAN+3, 1 
;counter.c,100 :: 		NUMPER=ENTRAN+SALEN;
0x0D4E	0x501E      	MOVF        _SALEN, 0 
0x0D50	0x2423      	ADDWF       _ENTRAN, 0 
0x0D52	0x6E1A      	MOVWF       _NUMPER 
0x0D54	0x501F      	MOVF        _SALEN+1, 0 
0x0D56	0x2024      	ADDWFC      _ENTRAN+1, 0 
0x0D58	0x6E1B      	MOVWF       _NUMPER+1 
0x0D5A	0x5020      	MOVF        _SALEN+2, 0 
0x0D5C	0x2025      	ADDWFC      _ENTRAN+2, 0 
0x0D5E	0x6E1C      	MOVWF       _NUMPER+2 
0x0D60	0x5021      	MOVF        _SALEN+3, 0 
0x0D62	0x2026      	ADDWFC      _ENTRAN+3, 0 
0x0D64	0x6E1D      	MOVWF       _NUMPER+3 
;counter.c,101 :: 		resultadoT='X';
0x0D66	0x0E58      	MOVLW       88
0x0D68	0x6E19      	MOVWF       _resultadoT 
;counter.c,103 :: 		rs485_slave_send();
0x0D6A	0xDCB9      	RCALL       _rs485_slave_send
;counter.c,104 :: 		save_data();
0x0D6C	0xDE31      	RCALL       _save_data
;counter.c,105 :: 		}
L_counter57:
;counter.c,106 :: 		if(resultadoT=='S'){
0x0D6E	0x5019      	MOVF        _resultadoT, 0 
0x0D70	0x0A53      	XORLW       83
0x0D72	0xE116      	BNZ         L_counter58
;counter.c,107 :: 		SALEN++;
0x0D74	0x0E01      	MOVLW       1
0x0D76	0x261E      	ADDWF       _SALEN, 1 
0x0D78	0x0E00      	MOVLW       0
0x0D7A	0x221F      	ADDWFC      _SALEN+1, 1 
0x0D7C	0x2220      	ADDWFC      _SALEN+2, 1 
0x0D7E	0x2221      	ADDWFC      _SALEN+3, 1 
;counter.c,108 :: 		NUMPER=ENTRAN+SALEN;
0x0D80	0x501E      	MOVF        _SALEN, 0 
0x0D82	0x2423      	ADDWF       _ENTRAN, 0 
0x0D84	0x6E1A      	MOVWF       _NUMPER 
0x0D86	0x501F      	MOVF        _SALEN+1, 0 
0x0D88	0x2024      	ADDWFC      _ENTRAN+1, 0 
0x0D8A	0x6E1B      	MOVWF       _NUMPER+1 
0x0D8C	0x5020      	MOVF        _SALEN+2, 0 
0x0D8E	0x2025      	ADDWFC      _ENTRAN+2, 0 
0x0D90	0x6E1C      	MOVWF       _NUMPER+2 
0x0D92	0x5021      	MOVF        _SALEN+3, 0 
0x0D94	0x2026      	ADDWFC      _ENTRAN+3, 0 
0x0D96	0x6E1D      	MOVWF       _NUMPER+3 
;counter.c,109 :: 		resultadoT='X';
0x0D98	0x0E58      	MOVLW       88
0x0D9A	0x6E19      	MOVWF       _resultadoT 
;counter.c,116 :: 		rs485_slave_send();
0x0D9C	0xDCA0      	RCALL       _rs485_slave_send
;counter.c,117 :: 		save_data();
0x0D9E	0xDE18      	RCALL       _save_data
;counter.c,118 :: 		}
L_counter58:
;counter.c,120 :: 		}
L_counter5:
;counter.c,122 :: 		logC=0;
0x0DA0	0x6A27      	CLRF        _logC 
;counter.c,123 :: 		Bpm=-1; Bpn=-1; Bpx=-1; Bpy=-1;
0x0DA2	0x0EFF      	MOVLW       255
0x0DA4	0x6E30      	MOVWF       _Bpm 
0x0DA6	0x0EFF      	MOVLW       255
0x0DA8	0x6E17      	MOVWF       _Bpn 
0x0DAA	0x0EFF      	MOVLW       255
0x0DAC	0x6E18      	MOVWF       _Bpx 
0x0DAE	0x0EFF      	MOVLW       255
0x0DB0	0x6E15      	MOVWF       _Bpy 
;counter.c,124 :: 		Apm=-1; Apn=-1; Apx=-1; Apy=-1;
0x0DB2	0x0EFF      	MOVLW       255
0x0DB4	0x6E28      	MOVWF       _Apm 
0x0DB6	0x0EFF      	MOVLW       255
0x0DB8	0x6E2E      	MOVWF       _Apn 
0x0DBA	0x0EFF      	MOVLW       255
0x0DBC	0x6E31      	MOVWF       _Apx 
0x0DBE	0x0EFF      	MOVLW       255
0x0DC0	0x6E32      	MOVWF       _Apy 
;counter.c,125 :: 		iyn=0; ixm = 0; jyn=0; jxm=0;
0x0DC2	0x0100      	MOVLB       0
0x0DC4	0x6BB6      	CLRF        _iyn, 1
0x0DC6	0x6BB7      	CLRF        _ixm, 1
0x0DC8	0x6BB8      	CLRF        _ixm+1, 1
0x0DCA	0x6BB9      	CLRF        _ixm+2, 1
0x0DCC	0x6BBA      	CLRF        _ixm+3, 1
0x0DCE	0x6BB1      	CLRF        _jyn, 1
0x0DD0	0x6BB2      	CLRF        _jxm, 1
0x0DD2	0x6BB3      	CLRF        _jxm+1, 1
0x0DD4	0x6BB4      	CLRF        _jxm+2, 1
0x0DD6	0x6BB5      	CLRF        _jxm+3, 1
;counter.c,126 :: 		aa=2; bb=2; cc=2; dd=2; ee=2;
0x0DD8	0x0E02      	MOVLW       2
0x0DDA	0x0101      	MOVLB       1
0x0DDC	0x6F29      	MOVWF       _aa, 1
0x0DDE	0x0E02      	MOVLW       2
0x0DE0	0x6F23      	MOVWF       _bb, 1
0x0DE2	0x0E02      	MOVLW       2
0x0DE4	0x6F24      	MOVWF       _cc, 1
0x0DE6	0x0E02      	MOVLW       2
0x0DE8	0x6F2B      	MOVWF       _dd, 1
0x0DEA	0x0E02      	MOVLW       2
0x0DEC	0x6F2C      	MOVWF       _ee, 1
;counter.c,127 :: 		pp=0; //flag de presencia
0x0DEE	0x902D      	BCF         _pp, BitPos(_pp+0) 
;counter.c,128 :: 		}
L_counter4:
;counter.c,129 :: 		}
L_counter2:
;counter.c,131 :: 		if(aa==0 || bb==0 || cc==0 || dd==0 || ee==0){ //cuando alguno esta bloqueado
0x0DF0	0x5129      	MOVF        _aa, 0, 1
0x0DF2	0x0A00      	XORLW       0
0x0DF4	0xE00D      	BZ          L__counter64
0x0DF6	0x5123      	MOVF        _bb, 0, 1
0x0DF8	0x0A00      	XORLW       0
0x0DFA	0xE00A      	BZ          L__counter64
0x0DFC	0x5124      	MOVF        _cc, 0, 1
0x0DFE	0x0A00      	XORLW       0
0x0E00	0xE007      	BZ          L__counter64
0x0E02	0x512B      	MOVF        _dd, 0, 1
0x0E04	0x0A00      	XORLW       0
0x0E06	0xE004      	BZ          L__counter64
0x0E08	0x512C      	MOVF        _ee, 0, 1
0x0E0A	0x0A00      	XORLW       0
0x0E0C	0xE001      	BZ          L__counter64
0x0E0E	0xD00B      	BRA         L_counter61
L__counter64:
;counter.c,132 :: 		if(pp==0){ //flanco ascendete
0x0E10	0xB02D      	BTFSC       _pp, BitPos(_pp+0) 
0x0E12	0xD007      	BRA         L_counter62
;counter.c,133 :: 		pp=1;
0x0E14	0x802D      	BSF         _pp, BitPos(_pp+0) 
;counter.c,134 :: 		resultadoA='X';
0x0E16	0x0E58      	MOVLW       88
0x0E18	0x6E2F      	MOVWF       _resultadoA 
;counter.c,135 :: 		resultadoB='X';
0x0E1A	0x0E58      	MOVLW       88
0x0E1C	0x6E16      	MOVWF       _resultadoB 
;counter.c,136 :: 		resultadoT='X';
0x0E1E	0x0E58      	MOVLW       88
0x0E20	0x6E19      	MOVWF       _resultadoT 
;counter.c,137 :: 		}
L_counter62:
;counter.c,138 :: 		if (bk==0){ bk=1; }
0x0E22	0xA22D      	BTFSS       _bk, BitPos(_bk+0) 
0x0E24	0x822D      	BSF         _bk, BitPos(_bk+0) 
L_counter63:
;counter.c,139 :: 		}
L_counter61:
;counter.c,140 :: 		}
L_end_counter:
0x0E26	0x0012      	RETURN      0
; end of _counter
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0E28	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0E2A	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0E2E	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0E30	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0E32	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0E34	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0E36	0x0012      	RETURN      0
; end of ___CC2DW
_bloqueo:
;block.c,4 :: 		void bloqueo(void){
;block.c,5 :: 		contador++;
0x0E38	0x0101      	MOVLB       1
0x0E3A	0x4B25      	INFSNZ      _contador, 1, 1
0x0E3C	0x2B26      	INCF        _contador+1, 1, 1
;block.c,6 :: 		if (contador>=limit){
0x0E3E	0x0E36      	MOVLW       54
0x0E40	0x5D26      	SUBWF       _contador+1, 0, 1
0x0E42	0xE102      	BNZ         L__bloqueo21
0x0E44	0x0EB0      	MOVLW       176
0x0E46	0x5D25      	SUBWF       _contador, 0, 1
L__bloqueo21:
0x0E48	0xE32B      	BNC         L_bloqueo0
;block.c,7 :: 		contador=0;
0x0E4A	0x6B25      	CLRF        _contador, 1
0x0E4C	0x6B26      	CLRF        _contador+1, 1
;block.c,8 :: 		if(aa+bb+cc+dd+ee<=6 && bk==1){
0x0E4E	0x5123      	MOVF        _bb, 0, 1
0x0E50	0x2529      	ADDWF       _aa, 0, 1
0x0E52	0x6E00      	MOVWF       R0 
0x0E54	0x6A01      	CLRF        R1 
0x0E56	0x0E00      	MOVLW       0
0x0E58	0x2201      	ADDWFC      R1, 1 
0x0E5A	0x5124      	MOVF        _cc, 0, 1
0x0E5C	0x2600      	ADDWF       R0, 1 
0x0E5E	0x0E00      	MOVLW       0
0x0E60	0x2201      	ADDWFC      R1, 1 
0x0E62	0x512B      	MOVF        _dd, 0, 1
0x0E64	0x2600      	ADDWF       R0, 1 
0x0E66	0x0E00      	MOVLW       0
0x0E68	0x2201      	ADDWFC      R1, 1 
0x0E6A	0x512C      	MOVF        _ee, 0, 1
0x0E6C	0x2400      	ADDWF       R0, 0 
0x0E6E	0x6E02      	MOVWF       R2 
0x0E70	0x0E00      	MOVLW       0
0x0E72	0x2001      	ADDWFC      R1, 0 
0x0E74	0x6E03      	MOVWF       R3 
0x0E76	0x0E80      	MOVLW       128
0x0E78	0x6E00      	MOVWF       R0 
0x0E7A	0x0E80      	MOVLW       128
0x0E7C	0x1803      	XORWF       R3, 0 
0x0E7E	0x5C00      	SUBWF       R0, 0 
0x0E80	0xE102      	BNZ         L__bloqueo22
0x0E82	0x5002      	MOVF        R2, 0 
0x0E84	0x0806      	SUBLW       6
L__bloqueo22:
0x0E86	0xE30C      	BNC         L_bloqueo3
0x0E88	0xA22D      	BTFSS       _bk, BitPos(_bk+0) 
0x0E8A	0xD00A      	BRA         L_bloqueo3
L__bloqueo19:
;block.c,9 :: 		contador_seg++;
0x0E8C	0x2B2A      	INCF        _contador_seg, 1, 1
;block.c,10 :: 		if(contador_seg==5){
0x0E8E	0x512A      	MOVF        _contador_seg, 0, 1
0x0E90	0x0A05      	XORLW       5
0x0E92	0xE106      	BNZ         L_bloqueo4
;block.c,11 :: 		BLOQUEOS++;
0x0E94	0x0E01      	MOVLW       1
0x0E96	0x2629      	ADDWF       _BLOQUEOS, 1 
0x0E98	0x0E00      	MOVLW       0
0x0E9A	0x222A      	ADDWFC      _BLOQUEOS+1, 1 
0x0E9C	0x222B      	ADDWFC      _BLOQUEOS+2, 1 
0x0E9E	0x222C      	ADDWFC      _BLOQUEOS+3, 1 
;block.c,12 :: 		}
L_bloqueo4:
;block.c,13 :: 		}
L_bloqueo3:
;block.c,14 :: 		}
L_bloqueo0:
;block.c,16 :: 		if((contador==0 || contador==(limit*0.5)) && (contador_seg>=5)){
0x0EA0	0x0E00      	MOVLW       0
0x0EA2	0x1926      	XORWF       _contador+1, 0, 1
0x0EA4	0xE102      	BNZ         L__bloqueo23
0x0EA6	0x0E00      	MOVLW       0
0x0EA8	0x1925      	XORWF       _contador, 0, 1
L__bloqueo23:
0x0EAA	0xE015      	BZ          L__bloqueo18
0x0EAC	0xF000C125  	MOVFF       _contador, R0
0x0EB0	0xF001C126  	MOVFF       _contador+1, R1
0x0EB4	0xDDCF      	RCALL       _word2double
0x0EB6	0x0E00      	MOVLW       0
0x0EB8	0x6E04      	MOVWF       R4 
0x0EBA	0x0EC0      	MOVLW       192
0x0EBC	0x6E05      	MOVWF       R5 
0x0EBE	0x0E5A      	MOVLW       90
0x0EC0	0x6E06      	MOVWF       R6 
0x0EC2	0x0E8B      	MOVLW       139
0x0EC4	0x6E07      	MOVWF       R7 
0x0EC6	0xDD13      	RCALL       _Equals_Double
0x0EC8	0x0E01      	MOVLW       1
0x0ECA	0xA4D8      	BTFSS       STATUS, 2 
0x0ECC	0x0E00      	MOVLW       0
0x0ECE	0x6E00      	MOVWF       R0 
0x0ED0	0x5200      	MOVF        R0, 1 
0x0ED2	0xE101      	BNZ         L__bloqueo18
0x0ED4	0xD004      	BRA         L_bloqueo9
L__bloqueo18:
0x0ED6	0x0E05      	MOVLW       5
0x0ED8	0x5D2A      	SUBWF       _contador_seg, 0, 1
0x0EDA	0xB0D8      	BTFSC       STATUS, 0 
L__bloqueo17:
;block.c,17 :: 		BUZZER=0;
0x0EDC	0x9A83      	BCF         PORTD, 5 
;block.c,18 :: 		}
L_bloqueo9:
;block.c,20 :: 		if((contador==(limit*0.17) || contador==(limit*0.67)) && (contador_seg>=5)){
0x0EDE	0xF000C125  	MOVFF       _contador, R0
0x0EE2	0xF001C126  	MOVFF       _contador+1, R1
0x0EE6	0xDDB6      	RCALL       _word2double
0x0EE8	0x0E00      	MOVLW       0
0x0EEA	0x6E04      	MOVWF       R4 
0x0EEC	0x0EC0      	MOVLW       192
0x0EEE	0x6E05      	MOVWF       R5 
0x0EF0	0x0E14      	MOVLW       20
0x0EF2	0x6E06      	MOVWF       R6 
0x0EF4	0x0E8A      	MOVLW       138
0x0EF6	0x6E07      	MOVWF       R7 
0x0EF8	0xDCFA      	RCALL       _Equals_Double
0x0EFA	0x0E01      	MOVLW       1
0x0EFC	0xA4D8      	BTFSS       STATUS, 2 
0x0EFE	0x0E00      	MOVLW       0
0x0F00	0x6E00      	MOVWF       R0 
0x0F02	0x5200      	MOVF        R0, 1 
0x0F04	0xE115      	BNZ         L__bloqueo16
0x0F06	0xF000C125  	MOVFF       _contador, R0
0x0F0A	0xF001C126  	MOVFF       _contador+1, R1
0x0F0E	0xDDA2      	RCALL       _word2double
0x0F10	0x0E00      	MOVLW       0
0x0F12	0x6E04      	MOVWF       R4 
0x0F14	0x0E90      	MOVLW       144
0x0F16	0x6E05      	MOVWF       R5 
0x0F18	0x0E12      	MOVLW       18
0x0F1A	0x6E06      	MOVWF       R6 
0x0F1C	0x0E8C      	MOVLW       140
0x0F1E	0x6E07      	MOVWF       R7 
0x0F20	0xDCE6      	RCALL       _Equals_Double
0x0F22	0x0E01      	MOVLW       1
0x0F24	0xA4D8      	BTFSS       STATUS, 2 
0x0F26	0x0E00      	MOVLW       0
0x0F28	0x6E00      	MOVWF       R0 
0x0F2A	0x5200      	MOVF        R0, 1 
0x0F2C	0xE101      	BNZ         L__bloqueo16
0x0F2E	0xD004      	BRA         L_bloqueo14
L__bloqueo16:
0x0F30	0x0E05      	MOVLW       5
0x0F32	0x5D2A      	SUBWF       _contador_seg, 0, 1
0x0F34	0xB0D8      	BTFSC       STATUS, 0 
L__bloqueo15:
;block.c,21 :: 		BUZZER=1;
0x0F36	0x8A83      	BSF         PORTD, 5 
;block.c,22 :: 		}
L_bloqueo14:
;block.c,23 :: 		}
L_end_bloqueo:
0x0F38	0x0012      	RETURN      0
; end of _bloqueo
_SUart0_Init_T:
;pic_swuart.h,21 :: 		
;pic_swuart.h,23 :: 		
0x0F3A	0x9292      	BCF         Stx0_pin_Direction, BitPos(Stx0_pin_Direction+0) 
;pic_swuart.h,24 :: 		
0x0F3C	0x9292      	BCF         Scts0_pin_Direction, BitPos(Scts0_pin_Direction+0) 
;pic_swuart.h,25 :: 		
0x0F3E	0x8092      	BSF         Srx0_pin_Direction, BitPos(Srx0_pin_Direction+0) 
;pic_swuart.h,26 :: 		
0x0F40	0x8280      	BSF         Stx0_pin, BitPos(Stx0_pin+0) 
;pic_swuart.h,27 :: 		
0x0F42	0x9280      	BCF         Scts0_pin, BitPos(Scts0_pin+0) 
;pic_swuart.h,28 :: 		
0x0F44	0x8080      	BSF         Srx0_pin, BitPos(Srx0_pin+0) 
;pic_swuart.h,29 :: 		
L_end_SUart0_Init_T:
0x0F46	0x0012      	RETURN      0
; end of _SUart0_Init_T
_detect:
;detect.c,3 :: 		void detect(void){
;detect.c,5 :: 		unsigned short int j1 = 0;
0x0F48	0x0101      	MOVLB       1
0x0F4A	0x6B2D      	CLRF        detect_j1_L0, 1
0x0F4C	0x6B2E      	CLRF        detect_j2_L0, 1
0x0F4E	0x6B2F      	CLRF        detect_j3_L0, 1
;detect.c,9 :: 		if (PORTD.B7)
0x0F50	0xAE83      	BTFSS       PORTD, 7 
0x0F52	0xD000      	BRA         L_detect0
;detect.c,24 :: 		}
L_detect0:
;detect.c,26 :: 		if(!OPTO)
0x0F54	0xB484      	BTFSC       PORTE, 2 
0x0F56	0xD000      	BRA         L_detect1
;detect.c,31 :: 		}
L_detect1:
;detect.c,35 :: 		if(DET5){
0x0F58	0xAC81      	BTFSS       PORTB, 6 
0x0F5A	0xD016      	BRA         L_detect2
;detect.c,36 :: 		if(ee>0){ //flanco descendente : empieza a estar interrumpido
0x0F5C	0x512C      	MOVF        _ee, 0, 1
0x0F5E	0x0800      	SUBLW       0
0x0F60	0xE212      	BC          L_detect3
;detect.c,38 :: 		if(Apy == -1){
0x0F62	0x5032      	MOVF        _Apy, 0 
0x0F64	0x0AFF      	XORLW       255
0x0F66	0xE104      	BNZ         L_detect4
;detect.c,39 :: 		Apy=iyn;
0x0F68	0xF032C0B6  	MOVFF       _iyn, _Apy
;detect.c,40 :: 		iyn++;
0x0F6C	0x0100      	MOVLB       0
0x0F6E	0x2BB6      	INCF        _iyn, 1, 1
;detect.c,41 :: 		}
L_detect4:
;detect.c,42 :: 		ee=0;
0x0F70	0x0101      	MOVLB       1
0x0F72	0x6B2C      	CLRF        _ee, 1
;detect.c,43 :: 		SUart0_Write('A');
0x0F74	0x0E41      	MOVLW       65
0x0F76	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x0F78	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,44 :: 		SUart0_Write('Y');
0x0F7C	0x0E59      	MOVLW       89
0x0F7E	0x0101      	MOVLB       1
0x0F80	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x0F82	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,45 :: 		}
L_detect3:
;detect.c,46 :: 		}
0x0F86	0xD039      	BRA         L_detect5
L_detect2:
;detect.c,48 :: 		if(ee==0){ // flanco ascendente : empieza a recibir luz
0x0F88	0x0101      	MOVLB       1
0x0F8A	0x512C      	MOVF        _ee, 0, 1
0x0F8C	0x0A00      	XORLW       0
0x0F8E	0xE135      	BNZ         L_detect6
;detect.c,50 :: 		Apx = ixm;
0x0F90	0xF031C0B7  	MOVFF       _ixm, _Apx
;detect.c,51 :: 		ixm++;
0x0F94	0x0E01      	MOVLW       1
0x0F96	0x0100      	MOVLB       0
0x0F98	0x27B7      	ADDWF       _ixm, 1, 1
0x0F9A	0x0E00      	MOVLW       0
0x0F9C	0x23B8      	ADDWFC      _ixm+1, 1, 1
0x0F9E	0x23B9      	ADDWFC      _ixm+2, 1, 1
0x0FA0	0x23BA      	ADDWFC      _ixm+3, 1, 1
;detect.c,54 :: 		if(ixm >= 4294967000)
0x0FA2	0x0EFF      	MOVLW       255
0x0FA4	0x5DBA      	SUBWF       _ixm+3, 0, 1
0x0FA6	0xE108      	BNZ         L__detect50
0x0FA8	0x0EFF      	MOVLW       255
0x0FAA	0x5DB9      	SUBWF       _ixm+2, 0, 1
0x0FAC	0xE105      	BNZ         L__detect50
0x0FAE	0x0EFE      	MOVLW       254
0x0FB0	0x5DB8      	SUBWF       _ixm+1, 0, 1
0x0FB2	0xE102      	BNZ         L__detect50
0x0FB4	0x0ED8      	MOVLW       216
0x0FB6	0x5DB7      	SUBWF       _ixm, 0, 1
L__detect50:
0x0FB8	0xE314      	BNC         L_detect7
;detect.c,56 :: 		if(Apx > Apm)
0x0FBA	0x0E80      	MOVLW       128
0x0FBC	0x1828      	XORWF       _Apm, 0 
0x0FBE	0x6E00      	MOVWF       R0 
0x0FC0	0x0E80      	MOVLW       128
0x0FC2	0x1831      	XORWF       _Apx, 0 
0x0FC4	0x5C00      	SUBWF       R0, 0 
0x0FC6	0xE204      	BC          L_detect8
;detect.c,58 :: 		Apx = 1;
0x0FC8	0x0E01      	MOVLW       1
0x0FCA	0x6E31      	MOVWF       _Apx 
;detect.c,59 :: 		Apm = 0;
0x0FCC	0x6A28      	CLRF        _Apm 
;detect.c,60 :: 		}
0x0FCE	0xD003      	BRA         L_detect9
L_detect8:
;detect.c,63 :: 		Apx = 0;
0x0FD0	0x6A31      	CLRF        _Apx 
;detect.c,64 :: 		Apm = 1;
0x0FD2	0x0E01      	MOVLW       1
0x0FD4	0x6E28      	MOVWF       _Apm 
;detect.c,65 :: 		}
L_detect9:
;detect.c,66 :: 		ixm = 2;
0x0FD6	0x0E02      	MOVLW       2
0x0FD8	0x6FB7      	MOVWF       _ixm, 1
0x0FDA	0x0E00      	MOVLW       0
0x0FDC	0x6FB8      	MOVWF       _ixm+1, 1
0x0FDE	0x6FB9      	MOVWF       _ixm+2, 1
0x0FE0	0x6FBA      	MOVWF       _ixm+3, 1
;detect.c,67 :: 		}
L_detect7:
;detect.c,69 :: 		ee = 1;
0x0FE2	0x0E01      	MOVLW       1
0x0FE4	0x0101      	MOVLB       1
0x0FE6	0x6F2C      	MOVWF       _ee, 1
;detect.c,70 :: 		SUart0_Write('A');
0x0FE8	0x0E41      	MOVLW       65
0x0FEA	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x0FEC	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,71 :: 		SUart0_Write('X');
0x0FF0	0x0E58      	MOVLW       88
0x0FF2	0x0101      	MOVLB       1
0x0FF4	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x0FF6	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,72 :: 		}
L_detect6:
;detect.c,73 :: 		}
L_detect5:
;detect.c,75 :: 		if(DET4){
0x0FFA	0xAE81      	BTFSS       PORTB, 7 
0x0FFC	0xD017      	BRA         L_detect10
;detect.c,76 :: 		if(dd>0){ //flanco descendente : empieza a estar bloqueado
0x0FFE	0x0101      	MOVLB       1
0x1000	0x512B      	MOVF        _dd, 0, 1
0x1002	0x0800      	SUBLW       0
0x1004	0xE212      	BC          L_detect11
;detect.c,78 :: 		if(Apn == -1){
0x1006	0x502E      	MOVF        _Apn, 0 
0x1008	0x0AFF      	XORLW       255
0x100A	0xE104      	BNZ         L_detect12
;detect.c,79 :: 		Apn = iyn;
0x100C	0xF02EC0B6  	MOVFF       _iyn, _Apn
;detect.c,80 :: 		iyn++;
0x1010	0x0100      	MOVLB       0
0x1012	0x2BB6      	INCF        _iyn, 1, 1
;detect.c,81 :: 		}
L_detect12:
;detect.c,82 :: 		dd=0;
0x1014	0x0101      	MOVLB       1
0x1016	0x6B2B      	CLRF        _dd, 1
;detect.c,83 :: 		SUart0_Write('A');
0x1018	0x0E41      	MOVLW       65
0x101A	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x101C	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,84 :: 		SUart0_Write('N');
0x1020	0x0E4E      	MOVLW       78
0x1022	0x0101      	MOVLB       1
0x1024	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1026	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,85 :: 		}
L_detect11:
;detect.c,86 :: 		}
0x102A	0xD03B      	BRA         L_detect13
L_detect10:
;detect.c,88 :: 		if(dd==0){ // flanco ascendente : empieza a recibir luz
0x102C	0x0101      	MOVLB       1
0x102E	0x512B      	MOVF        _dd, 0, 1
0x1030	0x0A00      	XORLW       0
0x1032	0xE137      	BNZ         L_detect14
;detect.c,90 :: 		Apm = ixm * sumi;
0x1034	0x0100      	MOVLB       0
0x1036	0x51B7      	MOVF        _ixm, 0, 1
0x1038	0x03BB      	MULWF       _sumi, 1
0x103A	0xF028CFF3  	MOVFF       PRODL, _Apm
;detect.c,91 :: 		ixm++;
0x103E	0x0E01      	MOVLW       1
0x1040	0x27B7      	ADDWF       _ixm, 1, 1
0x1042	0x0E00      	MOVLW       0
0x1044	0x23B8      	ADDWFC      _ixm+1, 1, 1
0x1046	0x23B9      	ADDWFC      _ixm+2, 1, 1
0x1048	0x23BA      	ADDWFC      _ixm+3, 1, 1
;detect.c,94 :: 		if(ixm >= 4294967000)
0x104A	0x0EFF      	MOVLW       255
0x104C	0x5DBA      	SUBWF       _ixm+3, 0, 1
0x104E	0xE108      	BNZ         L__detect51
0x1050	0x0EFF      	MOVLW       255
0x1052	0x5DB9      	SUBWF       _ixm+2, 0, 1
0x1054	0xE105      	BNZ         L__detect51
0x1056	0x0EFE      	MOVLW       254
0x1058	0x5DB8      	SUBWF       _ixm+1, 0, 1
0x105A	0xE102      	BNZ         L__detect51
0x105C	0x0ED8      	MOVLW       216
0x105E	0x5DB7      	SUBWF       _ixm, 0, 1
L__detect51:
0x1060	0xE314      	BNC         L_detect15
;detect.c,96 :: 		if(Apx > Apm)
0x1062	0x0E80      	MOVLW       128
0x1064	0x1828      	XORWF       _Apm, 0 
0x1066	0x6E00      	MOVWF       R0 
0x1068	0x0E80      	MOVLW       128
0x106A	0x1831      	XORWF       _Apx, 0 
0x106C	0x5C00      	SUBWF       R0, 0 
0x106E	0xE204      	BC          L_detect16
;detect.c,98 :: 		Apx = 1;
0x1070	0x0E01      	MOVLW       1
0x1072	0x6E31      	MOVWF       _Apx 
;detect.c,99 :: 		Apm = 0;
0x1074	0x6A28      	CLRF        _Apm 
;detect.c,100 :: 		}
0x1076	0xD003      	BRA         L_detect17
L_detect16:
;detect.c,103 :: 		Apx = 0;
0x1078	0x6A31      	CLRF        _Apx 
;detect.c,104 :: 		Apm = 1;
0x107A	0x0E01      	MOVLW       1
0x107C	0x6E28      	MOVWF       _Apm 
;detect.c,105 :: 		}
L_detect17:
;detect.c,106 :: 		ixm = 2;
0x107E	0x0E02      	MOVLW       2
0x1080	0x6FB7      	MOVWF       _ixm, 1
0x1082	0x0E00      	MOVLW       0
0x1084	0x6FB8      	MOVWF       _ixm+1, 1
0x1086	0x6FB9      	MOVWF       _ixm+2, 1
0x1088	0x6FBA      	MOVWF       _ixm+3, 1
;detect.c,107 :: 		}
L_detect15:
;detect.c,108 :: 		dd = 1;
0x108A	0x0E01      	MOVLW       1
0x108C	0x0101      	MOVLB       1
0x108E	0x6F2B      	MOVWF       _dd, 1
;detect.c,109 :: 		SUart0_Write('A');
0x1090	0x0E41      	MOVLW       65
0x1092	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1094	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,110 :: 		SUart0_Write('M');
0x1098	0x0E4D      	MOVLW       77
0x109A	0x0101      	MOVLB       1
0x109C	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x109E	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,111 :: 		}
L_detect14:
;detect.c,112 :: 		}
L_detect13:
;detect.c,114 :: 		if(DET3){
0x10A2	0xA284      	BTFSS       PORTE, 1 
0x10A4	0xD017      	BRA         L_detect18
;detect.c,115 :: 		if(cc>0){ //flanco descendente : empieza a estar bloqueado
0x10A6	0x0101      	MOVLB       1
0x10A8	0x5124      	MOVF        _cc, 0, 1
0x10AA	0x0800      	SUBLW       0
0x10AC	0xE212      	BC          L_detect19
;detect.c,117 :: 		if(Bpy == -1){
0x10AE	0x5015      	MOVF        _Bpy, 0 
0x10B0	0x0AFF      	XORLW       255
0x10B2	0xE104      	BNZ         L_detect20
;detect.c,118 :: 		Bpy=jyn;
0x10B4	0xF015C0B1  	MOVFF       _jyn, _Bpy
;detect.c,119 :: 		jyn++;
0x10B8	0x0100      	MOVLB       0
0x10BA	0x2BB1      	INCF        _jyn, 1, 1
;detect.c,120 :: 		}
L_detect20:
;detect.c,121 :: 		cc=0;
0x10BC	0x0101      	MOVLB       1
0x10BE	0x6B24      	CLRF        _cc, 1
;detect.c,122 :: 		SUart0_Write('B');
0x10C0	0x0E42      	MOVLW       66
0x10C2	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x10C4	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,123 :: 		SUart0_Write('Y');
0x10C8	0x0E59      	MOVLW       89
0x10CA	0x0101      	MOVLB       1
0x10CC	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x10CE	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,124 :: 		}
L_detect19:
;detect.c,125 :: 		}
0x10D2	0xD039      	BRA         L_detect21
L_detect18:
;detect.c,127 :: 		if(cc==0){ // flanco ascendente : empieza a recibir luz
0x10D4	0x0101      	MOVLB       1
0x10D6	0x5124      	MOVF        _cc, 0, 1
0x10D8	0x0A00      	XORLW       0
0x10DA	0xE135      	BNZ         L_detect22
;detect.c,129 :: 		Bpx = jxm;
0x10DC	0xF018C0B2  	MOVFF       _jxm, _Bpx
;detect.c,130 :: 		jxm++;
0x10E0	0x0E01      	MOVLW       1
0x10E2	0x0100      	MOVLB       0
0x10E4	0x27B2      	ADDWF       _jxm, 1, 1
0x10E6	0x0E00      	MOVLW       0
0x10E8	0x23B3      	ADDWFC      _jxm+1, 1, 1
0x10EA	0x23B4      	ADDWFC      _jxm+2, 1, 1
0x10EC	0x23B5      	ADDWFC      _jxm+3, 1, 1
;detect.c,133 :: 		if(jxm > 4294967000)
0x10EE	0x51B5      	MOVF        _jxm+3, 0, 1
0x10F0	0x08FF      	SUBLW       255
0x10F2	0xE108      	BNZ         L__detect52
0x10F4	0x51B4      	MOVF        _jxm+2, 0, 1
0x10F6	0x08FF      	SUBLW       255
0x10F8	0xE105      	BNZ         L__detect52
0x10FA	0x51B3      	MOVF        _jxm+1, 0, 1
0x10FC	0x08FE      	SUBLW       254
0x10FE	0xE102      	BNZ         L__detect52
0x1100	0x51B2      	MOVF        _jxm, 0, 1
0x1102	0x08D8      	SUBLW       216
L__detect52:
0x1104	0xE214      	BC          L_detect23
;detect.c,135 :: 		if(Bpx > Bpm)
0x1106	0x0E80      	MOVLW       128
0x1108	0x1830      	XORWF       _Bpm, 0 
0x110A	0x6E00      	MOVWF       R0 
0x110C	0x0E80      	MOVLW       128
0x110E	0x1818      	XORWF       _Bpx, 0 
0x1110	0x5C00      	SUBWF       R0, 0 
0x1112	0xE204      	BC          L_detect24
;detect.c,137 :: 		Bpx = 1;
0x1114	0x0E01      	MOVLW       1
0x1116	0x6E18      	MOVWF       _Bpx 
;detect.c,138 :: 		Bpm = 0;
0x1118	0x6A30      	CLRF        _Bpm 
;detect.c,139 :: 		}
0x111A	0xD003      	BRA         L_detect25
L_detect24:
;detect.c,142 :: 		Bpx = 0;
0x111C	0x6A18      	CLRF        _Bpx 
;detect.c,143 :: 		Bpm = 1;
0x111E	0x0E01      	MOVLW       1
0x1120	0x6E30      	MOVWF       _Bpm 
;detect.c,144 :: 		}
L_detect25:
;detect.c,145 :: 		jxm = 2;
0x1122	0x0E02      	MOVLW       2
0x1124	0x6FB2      	MOVWF       _jxm, 1
0x1126	0x0E00      	MOVLW       0
0x1128	0x6FB3      	MOVWF       _jxm+1, 1
0x112A	0x6FB4      	MOVWF       _jxm+2, 1
0x112C	0x6FB5      	MOVWF       _jxm+3, 1
;detect.c,147 :: 		}
L_detect23:
;detect.c,148 :: 		cc = 1;
0x112E	0x0E01      	MOVLW       1
0x1130	0x0101      	MOVLB       1
0x1132	0x6F24      	MOVWF       _cc, 1
;detect.c,149 :: 		SUart0_Write('B');
0x1134	0x0E42      	MOVLW       66
0x1136	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1138	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,150 :: 		SUart0_Write('X');
0x113C	0x0E58      	MOVLW       88
0x113E	0x0101      	MOVLB       1
0x1140	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1142	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,151 :: 		}
L_detect22:
;detect.c,152 :: 		}
L_detect21:
;detect.c,154 :: 		if(DET2){
0x1146	0xA680      	BTFSS       PORTA, 3 
0x1148	0xD017      	BRA         L_detect26
;detect.c,155 :: 		if(bb>0){ //flanco descendente : empieza a estar bloqueado
0x114A	0x0101      	MOVLB       1
0x114C	0x5123      	MOVF        _bb, 0, 1
0x114E	0x0800      	SUBLW       0
0x1150	0xE212      	BC          L_detect27
;detect.c,157 :: 		if(Bpn == -1){
0x1152	0x5017      	MOVF        _Bpn, 0 
0x1154	0x0AFF      	XORLW       255
0x1156	0xE104      	BNZ         L_detect28
;detect.c,158 :: 		Bpn = jyn;
0x1158	0xF017C0B1  	MOVFF       _jyn, _Bpn
;detect.c,159 :: 		jyn++;
0x115C	0x0100      	MOVLB       0
0x115E	0x2BB1      	INCF        _jyn, 1, 1
;detect.c,160 :: 		}
L_detect28:
;detect.c,161 :: 		bb=0;
0x1160	0x0101      	MOVLB       1
0x1162	0x6B23      	CLRF        _bb, 1
;detect.c,162 :: 		SUart0_Write('B');
0x1164	0x0E42      	MOVLW       66
0x1166	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1168	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,163 :: 		SUart0_Write('N');
0x116C	0x0E4E      	MOVLW       78
0x116E	0x0101      	MOVLB       1
0x1170	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1172	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,164 :: 		}
L_detect27:
;detect.c,165 :: 		}
0x1176	0xD03D      	BRA         L_detect29
L_detect26:
;detect.c,167 :: 		if(bb==0){ // flanco ascendente : empieza a recibir luz
0x1178	0x0101      	MOVLB       1
0x117A	0x5123      	MOVF        _bb, 0, 1
0x117C	0x0A00      	XORLW       0
0x117E	0xE139      	BNZ         L_detect30
;detect.c,169 :: 		Bpm = jxm * sumj;
0x1180	0x0100      	MOVLB       0
0x1182	0x51B2      	MOVF        _jxm, 0, 1
0x1184	0x0101      	MOVLB       1
0x1186	0x0321      	MULWF       _sumj, 1
0x1188	0xF030CFF3  	MOVFF       PRODL, _Bpm
;detect.c,170 :: 		jxm++;
0x118C	0x0E01      	MOVLW       1
0x118E	0x0100      	MOVLB       0
0x1190	0x27B2      	ADDWF       _jxm, 1, 1
0x1192	0x0E00      	MOVLW       0
0x1194	0x23B3      	ADDWFC      _jxm+1, 1, 1
0x1196	0x23B4      	ADDWFC      _jxm+2, 1, 1
0x1198	0x23B5      	ADDWFC      _jxm+3, 1, 1
;detect.c,173 :: 		if(jxm > 4294967000)
0x119A	0x51B5      	MOVF        _jxm+3, 0, 1
0x119C	0x08FF      	SUBLW       255
0x119E	0xE108      	BNZ         L__detect53
0x11A0	0x51B4      	MOVF        _jxm+2, 0, 1
0x11A2	0x08FF      	SUBLW       255
0x11A4	0xE105      	BNZ         L__detect53
0x11A6	0x51B3      	MOVF        _jxm+1, 0, 1
0x11A8	0x08FE      	SUBLW       254
0x11AA	0xE102      	BNZ         L__detect53
0x11AC	0x51B2      	MOVF        _jxm, 0, 1
0x11AE	0x08D8      	SUBLW       216
L__detect53:
0x11B0	0xE214      	BC          L_detect31
;detect.c,175 :: 		if(Bpx > Bpm)
0x11B2	0x0E80      	MOVLW       128
0x11B4	0x1830      	XORWF       _Bpm, 0 
0x11B6	0x6E00      	MOVWF       R0 
0x11B8	0x0E80      	MOVLW       128
0x11BA	0x1818      	XORWF       _Bpx, 0 
0x11BC	0x5C00      	SUBWF       R0, 0 
0x11BE	0xE204      	BC          L_detect32
;detect.c,177 :: 		Bpx = 1;
0x11C0	0x0E01      	MOVLW       1
0x11C2	0x6E18      	MOVWF       _Bpx 
;detect.c,178 :: 		Bpm = 0;
0x11C4	0x6A30      	CLRF        _Bpm 
;detect.c,179 :: 		}
0x11C6	0xD003      	BRA         L_detect33
L_detect32:
;detect.c,182 :: 		Bpx = 0;
0x11C8	0x6A18      	CLRF        _Bpx 
;detect.c,183 :: 		Bpm = 1;
0x11CA	0x0E01      	MOVLW       1
0x11CC	0x6E30      	MOVWF       _Bpm 
;detect.c,184 :: 		}
L_detect33:
;detect.c,185 :: 		jxm = 2;
0x11CE	0x0E02      	MOVLW       2
0x11D0	0x6FB2      	MOVWF       _jxm, 1
0x11D2	0x0E00      	MOVLW       0
0x11D4	0x6FB3      	MOVWF       _jxm+1, 1
0x11D6	0x6FB4      	MOVWF       _jxm+2, 1
0x11D8	0x6FB5      	MOVWF       _jxm+3, 1
;detect.c,186 :: 		}
L_detect31:
;detect.c,188 :: 		bb = 1;
0x11DA	0x0E01      	MOVLW       1
0x11DC	0x0101      	MOVLB       1
0x11DE	0x6F23      	MOVWF       _bb, 1
;detect.c,189 :: 		SUart0_Write('B');
0x11E0	0x0E42      	MOVLW       66
0x11E2	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x11E4	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,190 :: 		SUart0_Write('M');
0x11E8	0x0E4D      	MOVLW       77
0x11EA	0x0101      	MOVLB       1
0x11EC	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x11EE	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,191 :: 		}
L_detect30:
;detect.c,192 :: 		}
L_detect29:
;detect.c,194 :: 		if(DET1){
0x11F2	0xA880      	BTFSS       PORTA, 4 
0x11F4	0xD00B      	BRA         L_detect34
;detect.c,195 :: 		if(aa>0){ //flanco descendente : empieza a estar bloqueado
0x11F6	0x0101      	MOVLB       1
0x11F8	0x5129      	MOVF        _aa, 0, 1
0x11FA	0x0800      	SUBLW       0
0x11FC	0xE206      	BC          L_detect35
;detect.c,196 :: 		logC++;
0x11FE	0x2A27      	INCF        _logC, 1 
;detect.c,197 :: 		aa=0;
0x1200	0x6B29      	CLRF        _aa, 1
;detect.c,198 :: 		SUart0_Write('C');
0x1202	0x0E43      	MOVLW       67
0x1204	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x1206	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,199 :: 		}
L_detect35:
;detect.c,200 :: 		}
0x120A	0xD00B      	BRA         L_detect36
L_detect34:
;detect.c,202 :: 		if(aa==0){ // flanco ascendente : empieza a recibir luz
0x120C	0x0101      	MOVLB       1
0x120E	0x5129      	MOVF        _aa, 0, 1
0x1210	0x0A00      	XORLW       0
0x1212	0xE107      	BNZ         L_detect37
;detect.c,203 :: 		logC++;
0x1214	0x2A27      	INCF        _logC, 1 
;detect.c,204 :: 		aa = 1;
0x1216	0x0E01      	MOVLW       1
0x1218	0x6F29      	MOVWF       _aa, 1
;detect.c,205 :: 		SUart0_Write('C');
0x121A	0x0E43      	MOVLW       67
0x121C	0x6F30      	MOVWF       FARG_SUart0_Write_tch, 1
0x121E	0xF002ECB8  	CALL        _SUart0_Write, 0
;detect.c,206 :: 		}
L_detect37:
;detect.c,207 :: 		}
L_detect36:
;detect.c,210 :: 		if(aa==0 || bb==0 || cc==0 || dd==0 || ee==0){
0x1222	0x0101      	MOVLB       1
0x1224	0x5129      	MOVF        _aa, 0, 1
0x1226	0x0A00      	XORLW       0
0x1228	0xE00D      	BZ          L__detect48
0x122A	0x5123      	MOVF        _bb, 0, 1
0x122C	0x0A00      	XORLW       0
0x122E	0xE00A      	BZ          L__detect48
0x1230	0x5124      	MOVF        _cc, 0, 1
0x1232	0x0A00      	XORLW       0
0x1234	0xE007      	BZ          L__detect48
0x1236	0x512B      	MOVF        _dd, 0, 1
0x1238	0x0A00      	XORLW       0
0x123A	0xE004      	BZ          L__detect48
0x123C	0x512C      	MOVF        _ee, 0, 1
0x123E	0x0A00      	XORLW       0
0x1240	0xE001      	BZ          L__detect48
0x1242	0xD004      	BRA         L_detect40
L__detect48:
;detect.c,211 :: 		LED_V=0;
0x1244	0x9084      	BCF         PORTE, 0 
;detect.c,212 :: 		LED_A=0;
0x1246	0x9A82      	BCF         PORTC, 5 
;detect.c,213 :: 		LED_R=1;
0x1248	0x8A80      	BSF         PORTA, 5 
;detect.c,214 :: 		}
0x124A	0xD003      	BRA         L_detect41
L_detect40:
;detect.c,216 :: 		LED_V=1;
0x124C	0x8084      	BSF         PORTE, 0 
;detect.c,217 :: 		LED_A=1;
0x124E	0x8A82      	BSF         PORTC, 5 
;detect.c,218 :: 		LED_R=0;
0x1250	0x9A80      	BCF         PORTA, 5 
;detect.c,219 :: 		}
L_detect41:
;detect.c,221 :: 		if(jumper1){ j1 = 100;}else{ j1 = 0; }
0x1252	0xA683      	BTFSS       PORTD, 3 
0x1254	0xD003      	BRA         L_detect42
0x1256	0x0E64      	MOVLW       100
0x1258	0x6F2D      	MOVWF       detect_j1_L0, 1
0x125A	0xD001      	BRA         L_detect43
L_detect42:
0x125C	0x6B2D      	CLRF        detect_j1_L0, 1
L_detect43:
;detect.c,223 :: 		if(jumper2){ j2 = 10; }else{ j2 = 0; }
0x125E	0xA882      	BTFSS       PORTC, 4 
0x1260	0xD003      	BRA         L_detect44
0x1262	0x0E0A      	MOVLW       10
0x1264	0x6F2E      	MOVWF       detect_j2_L0, 1
0x1266	0xD001      	BRA         L_detect45
L_detect44:
0x1268	0x6B2E      	CLRF        detect_j2_L0, 1
L_detect45:
;detect.c,225 :: 		if(jumper3){ j3 = 1;  }else{ j3 = 0; }
0x126A	0xA883      	BTFSS       PORTD, 4 
0x126C	0xD003      	BRA         L_detect46
0x126E	0x0E01      	MOVLW       1
0x1270	0x6F2F      	MOVWF       detect_j3_L0, 1
0x1272	0xD001      	BRA         L_detect47
L_detect46:
0x1274	0x6B2F      	CLRF        detect_j3_L0, 1
L_detect47:
;detect.c,227 :: 		pos = j1 + j2 + j3;
0x1276	0x512E      	MOVF        detect_j2_L0, 0, 1
0x1278	0x252D      	ADDWF       detect_j1_L0, 0, 1
0x127A	0x6E22      	MOVWF       _pos 
0x127C	0x512F      	MOVF        detect_j3_L0, 0, 1
0x127E	0x2622      	ADDWF       _pos, 1 
;detect.c,228 :: 		}
L_end_detect:
0x1280	0x0012      	RETURN      0
; end of _detect
_main:
;barras4.c,6 :: 		void main() {
;barras4.c,7 :: 		init_setup();
0x1282	0xDC39      	RCALL       _init_setup
;barras4.c,8 :: 		SUart0_Init_T();
0x1284	0xDE5A      	RCALL       _SUart0_Init_T
;barras4.c,9 :: 		while(1){
L_main0:
;barras4.c,10 :: 		detect();
0x1286	0xDE60      	RCALL       _detect
;barras4.c,11 :: 		if(RJ45){
0x1288	0xAC83      	BTFSS       PORTD, 6 
0x128A	0xD002      	BRA         L_main2
;barras4.c,12 :: 		bloqueo();
0x128C	0xDDD5      	RCALL       _bloqueo
;barras4.c,13 :: 		counter();
0x128E	0xDC80      	RCALL       _counter
;barras4.c,14 :: 		}
L_main2:
;barras4.c,16 :: 		}
0x1290	0xD7FA      	BRA         L_main0
;barras4.c,17 :: 		}
L_end_main:
0x1292	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [10]    _UART1_Data_Ready
0x0026      [18]    _UART1_Read
0x0038      [14]    _UART1_Write
0x0046      [10]    _UART1_Tx_Idle
0x0050      [26]    _SETFUN32
0x006A      [14]    _RES032
0x0078      [20]    _EEPROM_Read
0x008C       [8]    _FIXSIGN32
0x0094      [24]    _____DoIFC
0x00AC      [56]    _EEPROM_Write
0x00E4     [224]    _read_long
0x01C4       [2]    _Delay_1us
0x01C6      [88]    _UART1_Init
0x021E     [202]    _write_long
0x02E8      [80]    _Mul_16X16_U
0x0338      [44]    _RS485Slave_Init
0x0364      [24]    _tx_prepare
0x037C     [114]    _NRM3232
0x03EE     [386]    _RS485Slave_Send
0x0570      [48]    _SUart0_Write
0x05A0      [76]    _init_led
0x05EC     [122]    _init_var
0x0666      [72]    _logB_reset
0x06AE      [48]    _init_485
0x06DE     [528]    _rs485_slave_send
0x08EE      [46]    _Equals_Double
0x091C      [72]    _logA_reset
0x0964     [108]    _PWM1_Set_Duty
0x09D0     [132]    _save_data
0x0A54      [40]    _word2double
0x0A7C       [8]    _PWM1_Init
0x0A84      [10]    _PWM1_Start
0x0A8E     [104]    _read_data
0x0AF6     [154]    _init_setup
0x0B90     [664]    _counter
0x0E28      [16]    ___CC2DW
0x0E38     [258]    _bloqueo
0x0F3A      [14]    _SUart0_Init_T
0x0F48     [826]    _detect
0x1282      [18]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    logB_reset_jj_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    logA_reset_jj_L0
0x0001       [1]    R1
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strncat_cp_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _Bpy
0x0016       [1]    _resultadoB
0x0017       [1]    _Bpn
0x0018       [1]    _Bpx
0x0019       [1]    _resultadoT
0x001A       [4]    _NUMPER
0x001E       [4]    _SALEN
0x0022       [1]    _pos
0x0023       [4]    _ENTRAN
0x0027       [1]    _logC
0x0028       [1]    _Apm
0x0029       [4]    _BLOQUEOS
0x002D       [0]    _bk
0x002D       [0]    _pp
0x002E       [1]    _Apn
0x002F       [1]    _resultadoA
0x0030       [1]    _Bpm
0x0031       [1]    _Apx
0x0032       [1]    _Apy
0x0033       [1]    __Lib_RS485__sladdress
0x0034       [1]    __Lib_RS485_specadr
0x0035     [100]    _logA
0x0099       [7]    _slave_tx_dat
0x00A0       [4]    _UART_Wr_Ptr
0x00A4       [4]    _UART_Rd_Ptr
0x00A8       [4]    _UART_Rdy_Ptr
0x00AC       [4]    _UART_Tx_Idle_Ptr
0x00B0       [1]    __Lib_RS485_sl_state
0x00B1       [1]    _jyn
0x00B2       [4]    _jxm
0x00B6       [1]    _iyn
0x00B7       [4]    _ixm
0x00BB       [1]    _sumi
0x00BC     [100]    _logB
0x0120       [1]    _logAindex
0x0121       [1]    _sumj
0x0122       [1]    _logBindex
0x0123       [1]    _bb
0x0124       [1]    _cc
0x0125       [4]    _contador
0x0129       [1]    _aa
0x012A       [1]    _contador_seg
0x012B       [1]    _dd
0x012C       [1]    _ee
0x012D       [1]    detect_j1_L0
0x012E       [1]    detect_j2_L0
0x012F       [1]    detect_j3_L0
0x0130       [4]    FARG_PWM1_Init_PWM_Freq
0x0130       [1]    FARG_PWM1_Set_Duty_new_duty
0x0130       [1]    FARG_SUart0_Write_tch
0x0130       [1]    rs485_slave_send_e3_L0
0x0131       [1]    rs485_slave_send_s0_L0
0x0132       [1]    rs485_slave_send_s1_L0
0x0133       [1]    rs485_slave_send_s2_L0
0x0134       [1]    rs485_slave_send_s3_L0
0x0135       [1]    rs485_slave_send_b0_L0
0x0136       [1]    rs485_slave_send_b1_L0
0x0137       [1]    rs485_slave_send_b2_L0
0x0138       [1]    rs485_slave_send_b3_L0
0x0139       [2]    FARG_write_long_addr
0x0139       [2]    FARG_read_long_addr
0x0139       [1]    FARG_tx_prepare_p0
0x0139       [1]    FARG_RS485Slave_Init_slave_address
0x0139       [2]    FARG_RS485Slave_Send_data_buffer
0x013A       [1]    FARG_tx_prepare_p1
0x013B       [4]    read_long_res_L0
0x013B       [1]    FARG_RS485Slave_Send_datalen
0x013B       [1]    FARG_tx_prepare_p2
0x013B       [4]    FARG_write_long_four_byte
0x013C       [1]    RS485Slave_Send_i_L0
0x013D       [1]    RS485Slave_Send_crc_send_L0
0x013E       [1]    RS485Slave_Send_len_L0
0x013F       [1]    write_long_f_byte_L0
0x013F       [1]    RS485Slave_Send_slave_address_L0
0x0140       [1]    write_long_s_byte_L0
0x0140       [1]    RS485Slave_Send_temp_L0
0x0141       [1]    write_long_t_byte_L0
0x0142       [2]    FARG_EEPROM_Write_address
0x0142       [2]    FARG_EEPROM_Read_address
0x0144       [1]    FARG_EEPROM_Write_data_
0x0145       [1]    FARG_UART1_Write_data_
0x0F80       [0]    Stx0_pin
0x0F80       [0]    Srx0_pin
0x0F80       [0]    rs485_rxtx_pin
0x0F80       [0]    Scts0_pin
0x0F80       [0]    RA2_bit
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F82       [1]    PORTC
0x0F83       [1]    PORTD
0x0F84       [1]    PORTE
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    Srx0_pin_Direction
0x0F92       [0]    Stx0_pin_Direction
0x0F92       [0]    rs485_rxtx_pin_direction
0x0F92       [0]    Scts0_pin_Direction
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F94       [0]    TRISC7_bit
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC2_bit
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0F9D       [0]    RCIE_bit
0x0F9D       [0]    TXIE_bit
0x0F9E       [1]    PIR1
0x0FA6       [1]    EECON1
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAA       [1]    EEADRH
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB4       [1]    CMCON
0x0FB8       [1]    BAUDCON
0x0FBD       [1]    CCP1CON
0x0FBE       [1]    CCPR1L
0x0FC1       [1]    ADCON1
0x0FCA       [1]    T2CON
0x0FCB       [1]    PR2
0x0FD8       [0]    C_bit
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [2]    FSR1
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF2       [0]    GIE_bit
0x0FF2       [0]    PEIE_bit
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
